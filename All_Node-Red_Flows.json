[
    {
        "id": "96b52997dd4c6871",
        "type": "tab",
        "label": "Demo Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85ad963fb6a59bb9",
        "type": "tab",
        "label": "common",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "79dc239a73c23863",
        "type": "tab",
        "label": "Storage",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ec1759a5096397e5",
        "type": "tab",
        "label": "sequence",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "03fb9f0e9aba473c",
        "type": "tab",
        "label": "Sequence - Join",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f939c00672b229ae",
        "type": "tab",
        "label": "Sequence - sort",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a4d9e552167477d2",
        "type": "tab",
        "label": "split - payload",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c2e1f751978fcd7d",
        "type": "tab",
        "label": "parser - csv",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "285385cccc33c062",
        "type": "tab",
        "label": "parse - html",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "35cfd6610edcee1d",
        "type": "tab",
        "label": "parse - json",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e9e64cd1d94cdb3",
        "type": "tab",
        "label": "parse - xml  ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7ef921d8a99e40a2",
        "type": "tab",
        "label": "http",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ad5189c2e56f025f",
        "type": "tab",
        "label": "MySQL",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d5ae85732ef2ad69",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "78f5f0c0.cb094",
        "type": "tab",
        "label": "Repository",
        "disabled": false,
        "info": ""
    },
    {
        "id": "85f1cd85c70de2f2",
        "type": "tab",
        "label": "MySQL Functions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "79b529018d7067ea",
        "type": "tab",
        "label": "IOT Factory CRUD",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "609e5eb634beaf5c",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c6ec33554d3c9229",
        "type": "MySQL-Server-Connector",
        "name": "mysql",
        "host": "example.com",
        "port": "3306",
        "user": "golden",
        "password": "password",
        "tls": true,
        "database": "pets"
    },
    {
        "id": "0309ff58cdea7cd3",
        "type": "MySQL-Server-Connector",
        "name": "",
        "host": "172.17.0.6",
        "port": "3306",
        "user": "golden",
        "password": "password",
        "tls": false,
        "database": "PETS"
    },
    {
        "id": "aaafb917b4a7c922",
        "type": "Stackhero-MySQL-Server",
        "name": "",
        "host": "192.168.0.55",
        "port": "3306",
        "tls": false,
        "database": "pets"
    },
    {
        "id": "694b9bbbe1f566c9",
        "type": "mysql2-server",
        "host": "192.168.0.55",
        "port": "3306",
        "username": "golden",
        "password": "password",
        "db": "pets",
        "servername": ""
    },
    {
        "id": "31b212a0f0dc550c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "192.168.0.55",
        "port": "3306",
        "db": "pets",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "f4edb6ec.2c29f8",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "FHIR Repository",
        "server": "192.168.0.55",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "FHIR",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true,
        "readOnlyIntent": false
    },
    {
        "id": "3a2a3be.e1920c4",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "",
        "server": "192.168.0.55",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "pets",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true,
        "readOnlyIntent": false
    },
    {
        "id": "df8c0b88.91b0a8",
        "type": "MSSQL-CN",
        "name": "Dev",
        "server": "192.168.0.55",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": true,
        "database": "pets",
        "useUTC": false,
        "connectTimeout": "",
        "requestTimeout": "",
        "cancelTimeout": "",
        "pool": "",
        "parseJSON": true,
        "enableArithAbort": true,
        "readOnlyIntent": false
    },
    {
        "id": "712b53e5.990dfc",
        "type": "mqtt-broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "NodeRedSQLClient",
        "usetls": false,
        "compatmode": true,
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "048228d0d9e01f5b",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "azure",
        "server": "192.168.0.55",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "pets",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true,
        "readOnlyIntent": false
    },
    {
        "id": "6cf82e37.9a1db",
        "type": "MySQLdatabase",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "sys",
        "tz": ""
    },
    {
        "id": "ab14c52a3647dde4",
        "type": "debug",
        "z": "96b52997dd4c6871",
        "name": "",
        "active": true,
        "complete": false,
        "x": 470,
        "y": 40,
        "wires": []
    },
    {
        "id": "21db3f1f7352fea4",
        "type": "inject",
        "z": "96b52997dd4c6871",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "once": false,
        "topic": "",
        "payload": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "5bbe177fdca79994"
            ]
        ]
    },
    {
        "id": "5bbe177fdca79994",
        "type": "function",
        "z": "96b52997dd4c6871",
        "name": "Format timestamp",
        "func": "// Create a Date object from the payload\nvar date = new Date(msg.payload);\n// Change the payload to be a formatted Date string\nmsg.payload = date.toString();\n// Return the message so it can be sent on\nreturn msg;",
        "outputs": 1,
        "x": 270,
        "y": 40,
        "wires": [
            [
                "ab14c52a3647dde4"
            ]
        ]
    },
    {
        "id": "e36406f2.8ef798",
        "type": "inject",
        "z": "96b52997dd4c6871",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "c3c50023.3bbed"
            ]
        ]
    },
    {
        "id": "8afc6cac.e0812",
        "type": "csv",
        "z": "96b52997dd4c6871",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": 0,
        "strings": true,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "44779781.4190f8",
                "6f0eb546.9e208c"
            ]
        ]
    },
    {
        "id": "44779781.4190f8",
        "type": "debug",
        "z": "96b52997dd4c6871",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "6f0eb546.9e208c",
        "type": "switch",
        "z": "96b52997dd4c6871",
        "name": "",
        "property": "payload.mag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "9",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "8",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6.8",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "d78d4aa8.8c8208"
            ],
            [
                "c485365f05fef67a"
            ],
            [
                "7041742f16e43fe2"
            ],
            [
                "975e10b14676830c"
            ]
        ]
    },
    {
        "id": "d78d4aa8.8c8208",
        "type": "change",
        "z": "96b52997dd4c6871",
        "name": "Richter >= 9",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "We are all going to die!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "72fddece.fac0d"
            ]
        ]
    },
    {
        "id": "72fddece.fac0d",
        "type": "debug",
        "z": "96b52997dd4c6871",
        "name": "",
        "active": true,
        "tosidebar": true,
        "complete": false,
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 380,
        "wires": []
    },
    {
        "id": "cc1a32dc68d34c4d",
        "type": "comment",
        "z": "96b52997dd4c6871",
        "name": "Earthquake",
        "info": "",
        "x": 90,
        "y": 200,
        "wires": []
    },
    {
        "id": "c485365f05fef67a",
        "type": "change",
        "z": "96b52997dd4c6871",
        "name": "Richter was 8",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Panic",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 380,
        "wires": [
            [
                "72fddece.fac0d"
            ]
        ]
    },
    {
        "id": "7041742f16e43fe2",
        "type": "change",
        "z": "96b52997dd4c6871",
        "name": "Feel that?",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Feel that?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 420,
        "wires": [
            [
                "72fddece.fac0d"
            ]
        ]
    },
    {
        "id": "975e10b14676830c",
        "type": "change",
        "z": "96b52997dd4c6871",
        "name": "Morocco",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Morocco",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 460,
        "wires": [
            [
                "845162b39c32d260"
            ]
        ]
    },
    {
        "id": "c3c50023.3bbed",
        "type": "http request",
        "z": "96b52997dd4c6871",
        "name": "Recent Quakes",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "8afc6cac.e0812"
            ]
        ]
    },
    {
        "id": "f8076e085973f4dd",
        "type": "http request",
        "z": "96b52997dd4c6871",
        "name": "Got a stupid joke",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "https://official-joke-api.appspot.com/jokes/random",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 520,
        "wires": [
            [
                "5bbd2546fb257faa"
            ]
        ]
    },
    {
        "id": "5bbd2546fb257faa",
        "type": "debug",
        "z": "96b52997dd4c6871",
        "name": "Jokes keep coming",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "5346218b607019ee",
        "type": "inject",
        "z": "96b52997dd4c6871",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/15 0-22 * * 5,6,0",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "f8076e085973f4dd"
            ]
        ]
    },
    {
        "id": "845162b39c32d260",
        "type": "debug",
        "z": "96b52997dd4c6871",
        "name": "Richter = 6.8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 460,
        "wires": []
    },
    {
        "id": "f3067c9f37091422",
        "type": "debug",
        "z": "96b52997dd4c6871",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 600,
        "wires": []
    },
    {
        "id": "1486d9d93fd8ca4c",
        "type": "mysql-r2",
        "z": "96b52997dd4c6871",
        "name": "MySQL Docker",
        "host": "localhost",
        "database": "pets",
        "username": "golden",
        "password": "password",
        "sql": "SELECT *\nFROM `cats`\nLIMIT 1000;",
        "port": "3306",
        "pooling": false,
        "waitForConnections": true,
        "connectionLimit": "10",
        "queueTimeout": "10000",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "f3067c9f37091422"
            ]
        ]
    },
    {
        "id": "d1073c30.cb321",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "7bab9134.35ad"
            ]
        ]
    },
    {
        "id": "f96f0ba7.cfe008",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 200,
        "wires": []
    },
    {
        "id": "3ea03953.25a1a6",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Example: Catch Node",
        "info": "Catch node can catch error caused by specified nodes or all nodes in a flow.  It receives input of target node.",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "d6a15623.056d18",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Catch error of a node",
        "info": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "7e1c072c.bc1cc8",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Catch error caused by function node",
        "info": "",
        "x": 480,
        "y": 240,
        "wires": []
    },
    {
        "id": "b45ca54e.eca208",
        "type": "catch",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "scope": [
            "7bab9134.35ad"
        ],
        "uncaught": false,
        "x": 400,
        "y": 200,
        "wires": [
            [
                "f96f0ba7.cfe008"
            ]
        ]
    },
    {
        "id": "7bab9134.35ad",
        "type": "function",
        "z": "85ad963fb6a59bb9",
        "name": "Error",
        "func": "throw new Error(\"Error Occured!\")",
        "outputs": 0,
        "noerr": 0,
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "77fc6765f7b8c358",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "862f22a172b11643"
            ]
        ]
    },
    {
        "id": "862f22a172b11643",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "0b98ea554a78bafe",
        "type": "complete",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "scope": [
            "862f22a172b11643"
        ],
        "uncaught": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "283ccfbb7841b1c6"
            ]
        ]
    },
    {
        "id": "283ccfbb7841b1c6",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 440,
        "wires": []
    },
    {
        "id": "3d720c57de62027a",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Catch completion of a node",
        "info": "",
        "x": 460,
        "y": 340,
        "wires": []
    },
    {
        "id": "cd931e19f4d68d76",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Catch completion of 1st debug node",
        "info": "",
        "x": 480,
        "y": 480,
        "wires": []
    },
    {
        "id": "ca09507df50616df",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Example: Complete Node",
        "info": "Complete node can catch completion of specified nodes.  It receives input of target node.",
        "x": 210,
        "y": 300,
        "wires": []
    },
    {
        "id": "87bd706a.aec93",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Output payload value to debug sidebar",
        "info": "Debug node can be used to output payload value to debug sidebar.",
        "x": 210,
        "y": 540,
        "wires": []
    },
    {
        "id": "8035b07f.7547e",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "Hello, World!",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "20d1344f.931e3c"
            ]
        ]
    },
    {
        "id": "20d1344f.931e3c",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 430,
        "y": 580,
        "wires": []
    },
    {
        "id": "8c66d039.44465",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Output complete object",
        "info": "Debug node can be used to output whole object value to debug sidebar.",
        "x": 160,
        "y": 640,
        "wires": []
    },
    {
        "id": "dac87e40.90376",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "Hello, World!",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "Sample",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Sample",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 220,
        "y": 680,
        "wires": [
            [
                "a77fa5e3.fac248"
            ]
        ]
    },
    {
        "id": "a77fa5e3.fac248",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 680,
        "wires": []
    },
    {
        "id": "fb1c3ce9.c29ee",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Output to  console",
        "info": "Debug node can be used to output values to console.",
        "x": 150,
        "y": 740,
        "wires": []
    },
    {
        "id": "3c24e746.9ff6a8",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 190,
        "y": 780,
        "wires": [
            [
                "66cc7b44.82ba74"
            ]
        ]
    },
    {
        "id": "66cc7b44.82ba74",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 440,
        "y": 780,
        "wires": []
    },
    {
        "id": "33791e6a.973502",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Output to node status area",
        "info": "Debug node can be used to output values to  status area below the node.",
        "x": 690,
        "y": 640,
        "wires": []
    },
    {
        "id": "a5d8e744.a034e8",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "Hello, World!",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 710,
        "y": 680,
        "wires": [
            [
                "b0646a4d.db4bc8"
            ]
        ]
    },
    {
        "id": "b0646a4d.db4bc8",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 950,
        "y": 680,
        "wires": []
    },
    {
        "id": "30ed0a73.fcef86",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Formatting output using JSONata",
        "info": "Debug node can format output value using JSONata expression.",
        "x": 720,
        "y": 540,
        "wires": []
    },
    {
        "id": "6f477e7d.3a8da",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "Hello, World!",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "Sample",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Sample",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 740,
        "y": 580,
        "wires": [
            [
                "19c9408d.ac6d4f"
            ]
        ]
    },
    {
        "id": "19c9408d.ac6d4f",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "\"[\" & topic & \"] \" & payload",
        "targetType": "jsonata",
        "x": 940,
        "y": 580,
        "wires": []
    },
    {
        "id": "fcd0339ff47860ed",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Output to node status area",
        "info": "Debug node can be used to output values to  status area below the node.",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "2cbd9a5a58591d8a",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 790,
        "y": 100,
        "wires": [
            [
                "e762f99808170c72"
            ]
        ]
    },
    {
        "id": "e762f99808170c72",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "a9fda058591fa0fe",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Formatting output using JSONata",
        "info": "Debug node can format output value using JSONata expression.",
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "5a786e041291c237",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "Hello, World!",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "Sample",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Sample",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "5ad5bb059cdfde7c"
            ]
        ]
    },
    {
        "id": "5ad5bb059cdfde7c",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "\"[\" & topic & \"] \" & payload",
        "targetType": "jsonata",
        "x": 1020,
        "y": 200,
        "wires": []
    },
    {
        "id": "eca30de2.7f1b1",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Trigger a flow whenever Node-RED starts",
        "info": "Inject node can be used to trigger a flow whenever Node-RED starts.\n\n*This could be used to initialise context variables, or to send a notification that Node-RED has been restarted.*\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/basic/trigger-on-start).",
        "x": 220,
        "y": 860,
        "wires": []
    },
    {
        "id": "8189f250.ddfb2",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 200,
        "y": 920,
        "wires": [
            [
                "9a0150e8.6d0b3"
            ]
        ]
    },
    {
        "id": "9a0150e8.6d0b3",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 470,
        "y": 920,
        "wires": []
    },
    {
        "id": "64c1d7b3.a65b38",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Trigger a flow at regular intervals",
        "info": "Inject node can be used to trigger a flow at regular intervals. \n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/basic/trigger-at-interval).",
        "x": 190,
        "y": 980,
        "wires": []
    },
    {
        "id": "7c820e88.2db33",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "8f135212.6a9a9"
            ]
        ]
    },
    {
        "id": "8f135212.6a9a9",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 450,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a4060d5d.a3c92",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Trigger a flow at a specific time",
        "info": "Inject node can be used to trigger a flow at a specific time. \n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/basic/trigger-at-time).",
        "x": 790,
        "y": 860,
        "wires": []
    },
    {
        "id": "468db06c.bafdd",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "00 16 * * 1,2,3,4,5",
        "once": false,
        "topic": "",
        "payload": "It is 4pm on a weekday!",
        "payloadType": "str",
        "x": 790,
        "y": 920,
        "wires": [
            [
                "1ccc3174.cb926f"
            ]
        ]
    },
    {
        "id": "1ccc3174.cb926f",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1010,
        "y": 920,
        "wires": []
    },
    {
        "id": "3d5dcc169052b158",
        "type": "link in",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "links": [
            "fcd2b35a.6a7c4"
        ],
        "x": 165,
        "y": 1260,
        "wires": [
            [
                "38e2a44d529cbc74"
            ]
        ]
    },
    {
        "id": "38e2a44d529cbc74",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 300,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b3c4845f4af6c57c",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "↑ connect from link out node in 1st tab",
        "info": "",
        "x": 300,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b037231c86243e53",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Example: Link Node across tabs",
        "info": "Output of link out node can be connected to input of link in node.  The connection between links in/out is not shown, so the flow representation can be simplified.",
        "x": 200,
        "y": 1140,
        "wires": []
    },
    {
        "id": "0d2fe2c49e32cd0d",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Link output of inject node in 1st tab to input of debug node",
        "info": "",
        "x": 320,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0ad68e59afd113cc",
        "type": "link out",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "links": [
            "f5fead9.12cdf5",
            "5a1aba0a6135c37e",
            "741b4335beff912e"
        ],
        "x": 855,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e3e840f802b1d0f6",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 750,
        "y": 1280,
        "wires": [
            [
                "0ad68e59afd113cc"
            ]
        ]
    },
    {
        "id": "400941af41fba3e7",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Example: Link Node across tabs",
        "info": "Output of link out node can be connected to input of link in node.  The connection between links in/out is not shown, so the flow representation can be simplified.",
        "x": 710,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3f23cfd782cabed8",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Link output of inject node to input of debug node in 2nd tab",
        "info": "",
        "x": 840,
        "y": 1200,
        "wires": []
    },
    {
        "id": "4b290c64878f49c4",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "↓ connect to link in node in 2nd tab",
        "info": "",
        "x": 980,
        "y": 1240,
        "wires": []
    },
    {
        "id": "741b4335beff912e",
        "type": "link in",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "links": [
            "a11624c1f937710b",
            "0ad68e59afd113cc"
        ],
        "x": 175,
        "y": 1500,
        "wires": [
            [
                "a045f63f8619a0a0"
            ]
        ]
    },
    {
        "id": "a045f63f8619a0a0",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 310,
        "y": 1500,
        "wires": []
    },
    {
        "id": "c6d9c593f7e5cdfb",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "↑ connect from link out node in 1st tab",
        "info": "",
        "x": 310,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e1d13a4b67246827",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Example: Link Node across tabs",
        "info": "Output of link out node can be connected to input of link in node.  The connection between links in/out is not shown, so the flow representation can be simplified.",
        "x": 210,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d752f2afa98f45cf",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Link output of inject node in 1st tab to input of debug node",
        "info": "",
        "x": 330,
        "y": 1440,
        "wires": []
    },
    {
        "id": "cf27351f.392d88",
        "type": "inject",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "75eaadfb.bed014"
            ]
        ]
    },
    {
        "id": "cd1ac74a.a149a8",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1150,
        "y": 440,
        "wires": []
    },
    {
        "id": "fc2e6dfc.2b0e9",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Example: Status Node",
        "info": "Status node can catch change of status message of specified nodes or all nodes in a flow.  It receives metadata of status message.",
        "x": 760,
        "y": 280,
        "wires": []
    },
    {
        "id": "d97b97d0.c4cfe8",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Catch status message",
        "info": "",
        "x": 800,
        "y": 340,
        "wires": []
    },
    {
        "id": "a1914d09.e7ba2",
        "type": "comment",
        "z": "85ad963fb6a59bb9",
        "name": "Catch status message of 1st debug node",
        "info": "",
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "75fefe32.3e47d",
        "type": "status",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "scope": [
            "cf27351f.392d88",
            "75eaadfb.bed014"
        ],
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "cd1ac74a.a149a8"
            ]
        ]
    },
    {
        "id": "75eaadfb.bed014",
        "type": "debug",
        "z": "85ad963fb6a59bb9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 1010,
        "y": 380,
        "wires": []
    },
    {
        "id": "84222b92.d65d18",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "b4b9f603.739598"
            ]
        ]
    },
    {
        "id": "7b014430.dfd94c",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Write string to a file, then read from the file",
        "info": "Read file node can read string from a file.",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "b4b9f603.739598",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "6dc01cac.5c4bf4"
            ]
        ]
    },
    {
        "id": "2587adb9.7e60f2",
        "type": "debug",
        "z": "79dc239a73c23863",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "6dc01cac.5c4bf4",
        "type": "file in",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 560,
        "y": 140,
        "wires": [
            [
                "2587adb9.7e60f2"
            ]
        ]
    },
    {
        "id": "f4b4309a.3b78a",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑read result from file",
        "info": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "672d3693.3cabd8",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓write to /tmp/hello.txt",
        "info": "",
        "x": 380,
        "y": 100,
        "wires": []
    },
    {
        "id": "8997398f.c5d628",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "😀",
        "payloadType": "str",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "56e32d23.050f44"
            ]
        ]
    },
    {
        "id": "4e598e65.1799d",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Read data in specified encoding",
        "info": "Read file node can specify encoding of data read from a file.",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "56e32d23.050f44",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 320,
        "y": 300,
        "wires": [
            [
                "38fa0579.f2cd8a"
            ]
        ]
    },
    {
        "id": "d28c8994.99c0a8",
        "type": "debug",
        "z": "79dc239a73c23863",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "38fa0579.f2cd8a",
        "type": "file in",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "base64",
        "allProps": false,
        "x": 520,
        "y": 300,
        "wires": [
            [
                "d28c8994.99c0a8"
            ]
        ]
    },
    {
        "id": "fa22ca20.ae4528",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑read data from file as base64 string",
        "info": "",
        "x": 580,
        "y": 340,
        "wires": []
    },
    {
        "id": "148e25ad.98891a",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓write to /tmp/hello.txt",
        "info": "",
        "x": 340,
        "y": 260,
        "wires": []
    },
    {
        "id": "6a0b1d03.d4cee4",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "d4b00cb7.a5a23"
            ]
        ]
    },
    {
        "id": "f17ea1d1.8ecc3",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Read data breaking lines into individual messages",
        "info": "Read file node can break read text into messages with individual lines",
        "x": 230,
        "y": 400,
        "wires": []
    },
    {
        "id": "99ae7806.1d6428",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 480,
        "y": 480,
        "wires": [
            [
                "70d7892f.d27db8"
            ]
        ]
    },
    {
        "id": "7ed8282c.92b338",
        "type": "debug",
        "z": "79dc239a73c23863",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "70d7892f.d27db8",
        "type": "file in",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 580,
        "y": 540,
        "wires": [
            [
                "7ed8282c.92b338"
            ]
        ]
    },
    {
        "id": "c1b7e05.1d94b2",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑read data from file breaking lines into messages",
        "info": "",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "a5f647b2.cf27a8",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓write to /tmp/hello.txt",
        "info": "",
        "x": 500,
        "y": 440,
        "wires": []
    },
    {
        "id": "d4b00cb7.a5a23",
        "type": "template",
        "z": "79dc239a73c23863",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "one\ntwo\nthree!",
        "output": "str",
        "x": 310,
        "y": 480,
        "wires": [
            [
                "99ae7806.1d6428"
            ]
        ]
    },
    {
        "id": "bdd57acc.2edc48",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "7a069b01.0c2324"
            ]
        ]
    },
    {
        "id": "1fd12220.33953e",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Creating a message stream from lines of data",
        "info": "Read file node can break read text into messages with individual lines.  The messages creates a stream of messages.",
        "x": 210,
        "y": 600,
        "wires": []
    },
    {
        "id": "ab6eb213.2a08d",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 520,
        "y": 720,
        "wires": [
            [
                "b7ed49b0.649fb8"
            ]
        ]
    },
    {
        "id": "c48d8ae0.9ff3a8",
        "type": "debug",
        "z": "79dc239a73c23863",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 820,
        "wires": []
    },
    {
        "id": "b7ed49b0.649fb8",
        "type": "file in",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 260,
        "y": 820,
        "wires": [
            [
                "83073ebe.fcce4"
            ]
        ]
    },
    {
        "id": "3c33e69f.6a04ba",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑read data from file breaking lines into messages",
        "info": "",
        "x": 340,
        "y": 860,
        "wires": []
    },
    {
        "id": "3598bf7d.5712a",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓write to /tmp/hello.txt",
        "info": "",
        "x": 520,
        "y": 680,
        "wires": []
    },
    {
        "id": "7a069b01.0c2324",
        "type": "template",
        "z": "79dc239a73c23863",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Apple\nBanana\nGrape\nOrange",
        "output": "str",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "ab6eb213.2a08d"
            ]
        ]
    },
    {
        "id": "8d4ed1d0.821fe",
        "type": "join",
        "z": "79dc239a73c23863",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 590,
        "y": 820,
        "wires": [
            [
                "c48d8ae0.9ff3a8"
            ]
        ]
    },
    {
        "id": "83073ebe.fcce4",
        "type": "switch",
        "z": "79dc239a73c23863",
        "name": "< D",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "D",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 1,
        "x": 430,
        "y": 820,
        "wires": [
            [
                "8d4ed1d0.821fe"
            ]
        ]
    },
    {
        "id": "2088e195.f7aebe",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓filter data before \"D\"",
        "info": "",
        "x": 680,
        "y": 780,
        "wires": []
    },
    {
        "id": "b848cdc7.61e06",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑join to single string",
        "info": "",
        "x": 630,
        "y": 860,
        "wires": []
    },
    {
        "id": "d329586c1e3764a4",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "04e9d935f6888c69"
            ]
        ]
    },
    {
        "id": "d434ff35256d27cb",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Watch changes of a file",
        "info": "Watch node can watch and report changes of a file.",
        "x": 160,
        "y": 960,
        "wires": []
    },
    {
        "id": "04e9d935f6888c69",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/hello.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 380,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "161a27c6e24c0bd2",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓write to /tmp/hello.txt",
        "info": "",
        "x": 400,
        "y": 1000,
        "wires": []
    },
    {
        "id": "030459bc7879064f",
        "type": "watch",
        "z": "79dc239a73c23863",
        "name": "",
        "files": "/tmp/hello.txt",
        "recursive": "",
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "dec1a04a794bf85f"
            ]
        ]
    },
    {
        "id": "dec1a04a794bf85f",
        "type": "debug",
        "z": "79dc239a73c23863",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1080,
        "wires": []
    },
    {
        "id": "0aaec4df1935ac2f",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑watch changes of  /tmp/hello.txt",
        "info": "",
        "x": 430,
        "y": 1120,
        "wires": []
    },
    {
        "id": "acec9dcc.eca82",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello, World!",
        "payloadType": "str",
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "137d60e2.0e267f"
            ]
        ]
    },
    {
        "id": "cf011d1e.8afa6",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Watch changes in a directory",
        "info": "Watch node can watch and report changes in a directory",
        "x": 180,
        "y": 1200,
        "wires": []
    },
    {
        "id": "137d60e2.0e267f",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/HG/hello.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 420,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "9dfce283.63e5a",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↓write to /tmp/HG/*",
        "info": "",
        "x": 390,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cbfb788b.297f98",
        "type": "watch",
        "z": "79dc239a73c23863",
        "name": "",
        "files": "/tmp/HG",
        "recursive": false,
        "x": 360,
        "y": 1400,
        "wires": [
            [
                "3c691cd5.a0f2b4"
            ]
        ]
    },
    {
        "id": "3c691cd5.a0f2b4",
        "type": "debug",
        "z": "79dc239a73c23863",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1400,
        "wires": []
    },
    {
        "id": "c0d7ca6e.cad418",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "↑watch changes in /tmp/HG",
        "info": "",
        "x": 420,
        "y": 1440,
        "wires": []
    },
    {
        "id": "a04e5231.5a2e1",
        "type": "inject",
        "z": "79dc239a73c23863",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Goodbye, World!",
        "payloadType": "str",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "655d7bab.cda6f4"
            ]
        ]
    },
    {
        "id": "655d7bab.cda6f4",
        "type": "file",
        "z": "79dc239a73c23863",
        "name": "",
        "filename": "/tmp/HG/goodbye.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 400,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "f3b42209.a7673",
        "type": "comment",
        "z": "79dc239a73c23863",
        "name": "Notice: Create /tmp/HG directory before deploying this example",
        "info": "",
        "x": 290,
        "y": 1240,
        "wires": []
    },
    {
        "id": "74853568.22b87c",
        "type": "batch",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "count",
        "count": "5",
        "overlap": 0,
        "interval": "5",
        "allowEmptySequence": false,
        "topics": [],
        "x": 430,
        "y": 280,
        "wires": [
            [
                "8f4f683.99d1998"
            ]
        ]
    },
    {
        "id": "3d208473.f31e1c",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Group 5 consecutive messages",
        "info": "",
        "x": 230,
        "y": 108,
        "wires": []
    },
    {
        "id": "8f4f683.99d1998",
        "type": "join",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "6c47ccb3.bb0184"
            ]
        ]
    },
    {
        "id": "6c47ccb3.bb0184",
        "type": "debug",
        "z": "ec1759a5096397e5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "49c2ac1.59a9354",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↑ create message sequence with 5 messages",
        "info": "",
        "x": 550,
        "y": 320,
        "wires": []
    },
    {
        "id": "311dd6b4.5aeb7a",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↓ join sequence to array",
        "info": "",
        "x": 620,
        "y": 240,
        "wires": []
    },
    {
        "id": "e27c55b0.18e9c8",
        "type": "inject",
        "z": "ec1759a5096397e5",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "9e65f29a.69ca2"
            ]
        ]
    },
    {
        "id": "9e65f29a.69ca2",
        "type": "function",
        "z": "ec1759a5096397e5",
        "name": "send: 0-29",
        "func": "for(var x = 0; x < 300; x++) {\n    node.send({payload: x});\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "74853568.22b87c"
            ]
        ]
    },
    {
        "id": "817acbfb.452af8",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↓ send sequence: 0-29",
        "info": "",
        "x": 400,
        "y": 160,
        "wires": []
    },
    {
        "id": "53645699.a35c48",
        "type": "batch",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "count",
        "count": "5",
        "overlap": "1",
        "interval": "5",
        "allowEmptySequence": false,
        "topics": [],
        "x": 430,
        "y": 548,
        "wires": [
            [
                "4cb873e6.f9996c"
            ]
        ]
    },
    {
        "id": "ecff527d.d64cb",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Group 5 consecutive messages with overlap of 1 msg",
        "info": "",
        "x": 300,
        "y": 376,
        "wires": []
    },
    {
        "id": "4cb873e6.f9996c",
        "type": "join",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 570,
        "y": 548,
        "wires": [
            [
                "51089be3.4ecbf4"
            ]
        ]
    },
    {
        "id": "51089be3.4ecbf4",
        "type": "debug",
        "z": "ec1759a5096397e5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 548,
        "wires": []
    },
    {
        "id": "84c34533.6284a8",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↑ create message sequence with 5 messages with overlap of 1 msg",
        "info": "",
        "x": 620,
        "y": 588,
        "wires": []
    },
    {
        "id": "c7241026.18245",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↓ join sequence to array",
        "info": "",
        "x": 620,
        "y": 508,
        "wires": []
    },
    {
        "id": "67d24449.028eec",
        "type": "inject",
        "z": "ec1759a5096397e5",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 468,
        "wires": [
            [
                "5d909bfb.6faf44"
            ]
        ]
    },
    {
        "id": "5d909bfb.6faf44",
        "type": "function",
        "z": "ec1759a5096397e5",
        "name": "send: 0-29",
        "func": "for(var x = 0; x < 30; x++) {\n    node.send({payload: x});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 468,
        "wires": [
            [
                "53645699.a35c48"
            ]
        ]
    },
    {
        "id": "e7af9fbb.f30ad",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↓ send sequence: 0-29",
        "info": "",
        "x": 400,
        "y": 428,
        "wires": []
    },
    {
        "id": "f4a38f7b.8d62f",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Example: Number-based Group Mode",
        "info": "*Number-based Group mode* of batch node can be used to create new message sequences from incoming messages. Recently received *N*-messages are grouped to a sequence. Creating message sequences that has overwrap with adjacent message group is possible.\n",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "e3a5c066.16333",
        "type": "batch",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "interval",
        "count": 10,
        "overlap": 0,
        "interval": "5",
        "allowEmptySequence": false,
        "topics": [],
        "x": 470,
        "y": 900,
        "wires": [
            [
                "9223c119.c5268"
            ]
        ]
    },
    {
        "id": "606bb329.983c9c",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Group messages received within 5s",
        "info": "",
        "x": 300,
        "y": 720,
        "wires": []
    },
    {
        "id": "9223c119.c5268",
        "type": "join",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 610,
        "y": 900,
        "wires": [
            [
                "e4d07fa1.78c16"
            ]
        ]
    },
    {
        "id": "e4d07fa1.78c16",
        "type": "debug",
        "z": "ec1759a5096397e5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 900,
        "wires": []
    },
    {
        "id": "848f59e5.7528d8",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↑ create message sequence received within 5s",
        "info": "",
        "x": 600,
        "y": 940,
        "wires": []
    },
    {
        "id": "cf1bbb5e.ba3e68",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↓ join sequence to array",
        "info": "",
        "x": 660,
        "y": 860,
        "wires": []
    },
    {
        "id": "a1e311d5.4dca1",
        "type": "inject",
        "z": "ec1759a5096397e5",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 800,
        "wires": [
            [
                "97da73f2.ae01e"
            ]
        ]
    },
    {
        "id": "97da73f2.ae01e",
        "type": "function",
        "z": "ec1759a5096397e5",
        "name": "send: 0-29",
        "func": "for(var x = 0; x < 30; x++) {\n    node.send({payload: x});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "2776c823.77eba8"
            ]
        ]
    },
    {
        "id": "2776c823.77eba8",
        "type": "delay",
        "z": "ec1759a5096397e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 610,
        "y": 800,
        "wires": [
            [
                "e3a5c066.16333"
            ]
        ]
    },
    {
        "id": "93520648.6a7988",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↓ send sequence: 0-29",
        "info": "",
        "x": 460,
        "y": 760,
        "wires": []
    },
    {
        "id": "5842d64f.9fc608",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Example: Time-based Group Mode",
        "info": "*Time-based Group mode* of batch node can be used to create new message sequences from incoming messages received within specified time range. \n",
        "x": 260,
        "y": 660,
        "wires": []
    },
    {
        "id": "cf1fd796.197678",
        "type": "inject",
        "z": "ec1759a5096397e5",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SEQ",
        "payload": "[1,2,3,4,5]",
        "payloadType": "json",
        "x": 240,
        "y": 1100,
        "wires": [
            [
                "d1c8ddf0.99b4e"
            ]
        ]
    },
    {
        "id": "d1c8ddf0.99b4e",
        "type": "split",
        "z": "ec1759a5096397e5",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 1100,
        "wires": [
            [
                "f727a5d3.ea1a28"
            ]
        ]
    },
    {
        "id": "f727a5d3.ea1a28",
        "type": "batch",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "concat",
        "count": 10,
        "overlap": 0,
        "interval": 10,
        "allowEmptySequence": false,
        "topics": [
            {
                "topic": "SEQ"
            },
            {
                "topic": "SEQ"
            }
        ],
        "x": 550,
        "y": 1100,
        "wires": [
            [
                "f4d6dba4.7e8ab8"
            ]
        ]
    },
    {
        "id": "f4d6dba4.7e8ab8",
        "type": "join",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 690,
        "y": 1100,
        "wires": [
            [
                "31b81865.611788"
            ]
        ]
    },
    {
        "id": "31b81865.611788",
        "type": "debug",
        "z": "ec1759a5096397e5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 850,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8ad6b9c.7ee8548",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Duplicate",
        "info": "",
        "x": 180,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5137b2d0.f4838c",
        "type": "inject",
        "z": "ec1759a5096397e5",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SEQ",
        "payload": "[1,-6,-8,7,2,-3]",
        "payloadType": "json",
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "408f3032.eafc1"
            ]
        ]
    },
    {
        "id": "408f3032.eafc1",
        "type": "split",
        "z": "ec1759a5096397e5",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 1220,
        "wires": [
            [
                "dbd6e8b8.cbf2b8"
            ]
        ]
    },
    {
        "id": "c70a7fad.9ee08",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Filter & Concat",
        "info": "",
        "x": 200,
        "y": 1180,
        "wires": []
    },
    {
        "id": "dbd6e8b8.cbf2b8",
        "type": "switch",
        "z": "ec1759a5096397e5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 2,
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "c11e5c5f.876d6"
            ],
            [
                "e99c703b.f404"
            ]
        ]
    },
    {
        "id": "356c8654.2ad1aa",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↑ Duplicate SEQ",
        "info": "",
        "x": 580,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c11e5c5f.876d6",
        "type": "change",
        "z": "ec1759a5096397e5",
        "name": "Topic←POS",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "POS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1240,
        "wires": [
            [
                "3412e439.eda55c"
            ]
        ]
    },
    {
        "id": "e99c703b.f404",
        "type": "change",
        "z": "ec1759a5096397e5",
        "name": "Topic←NEG",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NEG",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1300,
        "wires": [
            [
                "3412e439.eda55c"
            ]
        ]
    },
    {
        "id": "3412e439.eda55c",
        "type": "batch",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "concat",
        "count": 10,
        "overlap": 0,
        "interval": 10,
        "allowEmptySequence": false,
        "topics": [
            {
                "topic": "NEG"
            },
            {
                "topic": "POS"
            }
        ],
        "x": 790,
        "y": 1280,
        "wires": [
            [
                "7f1ce95c.7ddbc8"
            ]
        ]
    },
    {
        "id": "e6f01877.16d558",
        "type": "debug",
        "z": "ec1759a5096397e5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7f1ce95c.7ddbc8",
        "type": "join",
        "z": "ec1759a5096397e5",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 850,
        "y": 1220,
        "wires": [
            [
                "e6f01877.16d558"
            ]
        ]
    },
    {
        "id": "c548f2c.641141",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "↑ Order sequence: negative→positive",
        "info": "",
        "x": 890,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c571b56c.ae63b8",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Filter pos/neg and make separate sequence↑ (but not a simple sort) ",
        "info": "",
        "x": 400,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c851c021.a9688",
        "type": "comment",
        "z": "ec1759a5096397e5",
        "name": "Example: Concatenate Mode",
        "info": "*Concatenate mode* of batch node can be used to combine input message sequences to create a new message sequence. Order of the sequences can be specified using message topic assigned to each message in a sequence.  Message sequence can be specified multiple times.\n",
        "x": 200,
        "y": 1000,
        "wires": []
    },
    {
        "id": "afe74de5.58488",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Example: Automatic Mode",
        "info": "Join node can be used to join payload of messages into single message payload. In automatic mode, it uses `parts` property to decide sequence of messages to join.",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "d0c8c78e.1281e8",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "c59ac70d.bb9c58"
            ]
        ]
    },
    {
        "id": "c59ac70d.bb9c58",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "21829618.af5b0a"
            ]
        ]
    },
    {
        "id": "d6c9fe0.d34ad",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "8defdbb8.aa9c08"
            ]
        ]
    },
    {
        "id": "21829618.af5b0a",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "d6c9fe0.d34ad"
            ]
        ]
    },
    {
        "id": "8defdbb8.aa9c08",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "d96759bf.eabe38",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join message sequence created by split node",
        "info": "",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "a46bcdd3.db621",
        "type": "csv",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "5d1c8a1e.691f74"
            ]
        ]
    },
    {
        "id": "65bf1807.dafad8",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "3640a5ef.f1e0ea"
            ]
        ]
    },
    {
        "id": "3640a5ef.f1e0ea",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "name,price\nApple,100\nOrange,80\nBanana,120\nKiwi,50",
        "output": "str",
        "x": 350,
        "y": 320,
        "wires": [
            [
                "a46bcdd3.db621"
            ]
        ]
    },
    {
        "id": "5d1c8a1e.691f74",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 630,
        "y": 320,
        "wires": [
            [
                "457ab3c9.7301ec"
            ]
        ]
    },
    {
        "id": "457ab3c9.7301ec",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 320,
        "wires": []
    },
    {
        "id": "d9f508c1.916c18",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join message sequence created by csv node",
        "info": "",
        "x": 250,
        "y": 260,
        "wires": []
    },
    {
        "id": "28970739.29e728",
        "type": "csv",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 490,
        "y": 480,
        "wires": [
            [
                "bbc984d8.be42d8"
            ]
        ]
    },
    {
        "id": "c8297669.559348",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 480,
        "wires": [
            [
                "2f8f819f.3371be"
            ]
        ]
    },
    {
        "id": "2f8f819f.3371be",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "name,price\nApple,100\nOrange,80\nBanana,120\nKiwi,50",
        "output": "str",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "28970739.29e728"
            ]
        ]
    },
    {
        "id": "716ea12e.1edb6",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "967a8991.a09208"
            ]
        ]
    },
    {
        "id": "967a8991.a09208",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 930,
        "y": 480,
        "wires": []
    },
    {
        "id": "332b2da9.4bc242",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join message sequence filtered by switch node",
        "info": "",
        "x": 260,
        "y": 420,
        "wires": []
    },
    {
        "id": "bbc984d8.be42d8",
        "type": "switch",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "property": "payload.price",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 1,
        "x": 630,
        "y": 480,
        "wires": [
            [
                "716ea12e.1edb6"
            ]
        ]
    },
    {
        "id": "6ff91f94.438e2",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into message sequence",
        "info": "",
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "9de138c7.480f08",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ automatically join message sequence using parts property",
        "info": "",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "f06b21f.1d748e",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ automatically join message sequence using parts property",
        "info": "",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "e0075028.900bb",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input csv data into message sequence of rows",
        "info": "",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "1a390528.cf792b",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input csv data into message sequence of rows",
        "info": "",
        "x": 640,
        "y": 560,
        "wires": []
    },
    {
        "id": "eb05ee61.9e266",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ automatically join message sequence using parts property",
        "info": "",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "33575fc6.e9b07",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ filter message seuqnce and create new sequence",
        "info": "",
        "x": 770,
        "y": 520,
        "wires": []
    },
    {
        "id": "7bf47d74.b233b4",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Example: Manual Mode",
        "info": "Join node can be used to join payload of messages into single message payload. In manual mode, it can uses number of messages, duration of time, or `msg.complete` property to decide sequence of messages to join.  The data format of the join result can also be selected.",
        "x": 180,
        "y": 600,
        "wires": []
    },
    {
        "id": "7f104f68.aecff",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 720,
        "wires": [
            [
                "ed0381d3.e25fc"
            ]
        ]
    },
    {
        "id": "ed0381d3.e25fc",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "12b322b7.78f48d"
            ]
        ]
    },
    {
        "id": "a4f5546e.28b268",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 720,
        "wires": [
            [
                "e3e636ab.5c5068"
            ]
        ]
    },
    {
        "id": "12b322b7.78f48d",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 720,
        "wires": [
            [
                "a4f5546e.28b268"
            ]
        ]
    },
    {
        "id": "e3e636ab.5c5068",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 720,
        "wires": []
    },
    {
        "id": "6a104137.204b3",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join two consecutive messages into single message",
        "info": "",
        "x": 310,
        "y": 660,
        "wires": []
    },
    {
        "id": "d91412a1.eb2fa",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "db100cd0.4cfdd",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually join message sequence by ','",
        "info": "",
        "x": 780,
        "y": 680,
        "wires": []
    },
    {
        "id": "d873311b.ab6f8",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 880,
        "wires": [
            [
                "854ae07c.1b88f"
            ]
        ]
    },
    {
        "id": "854ae07c.1b88f",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "4da6db2a.a610f4"
            ]
        ]
    },
    {
        "id": "5c158c02.fcd224",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 880,
        "wires": [
            [
                "659414e8.e901fc"
            ]
        ]
    },
    {
        "id": "4da6db2a.a610f4",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 880,
        "wires": [
            [
                "8e4f1c67.cdac4"
            ]
        ]
    },
    {
        "id": "659414e8.e901fc",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 990,
        "y": 880,
        "wires": []
    },
    {
        "id": "c002f9d0.a04128",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join messages received within specified time range into single message",
        "info": "",
        "x": 370,
        "y": 820,
        "wires": []
    },
    {
        "id": "3b62f93e.ad2af6",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 620,
        "y": 920,
        "wires": []
    },
    {
        "id": "db741240.4d6a1",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually join message received withn 2 secs",
        "info": "",
        "x": 960,
        "y": 840,
        "wires": []
    },
    {
        "id": "8e4f1c67.cdac4",
        "type": "delay",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 690,
        "y": 880,
        "wires": [
            [
                "5c158c02.fcd224"
            ]
        ]
    },
    {
        "id": "53363c0f.836454",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1060,
        "wires": [
            [
                "33d9801f.5edc6"
            ]
        ]
    },
    {
        "id": "33d9801f.5edc6",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 390,
        "y": 1060,
        "wires": [
            [
                "46fb1122.a49b"
            ]
        ]
    },
    {
        "id": "e5d7310a.8ba39",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 890,
        "y": 1060,
        "wires": [
            [
                "d1a98ee5.3a55"
            ]
        ]
    },
    {
        "id": "46fb1122.a49b",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "f32b7544.10b328"
            ]
        ]
    },
    {
        "id": "d1a98ee5.3a55",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 1060,
        "wires": []
    },
    {
        "id": "48f547c0.063278",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join messages into single message using msg.complete",
        "info": "",
        "x": 330,
        "y": 980,
        "wires": []
    },
    {
        "id": "8106b831.3374e8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 620,
        "y": 1100,
        "wires": []
    },
    {
        "id": "373877fe.60a0d8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually join message sequence by msg.complete",
        "info": "",
        "x": 1040,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f32b7544.10b328",
        "type": "function",
        "z": "03fb9f0e9aba473c",
        "name": "set msg.complete",
        "func": "var payload = msg.payload;\nif ((payload === \"Banana\") || (payload === \"Kiwi\")) {\n    msg.complete = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "e5d7310a.8ba39"
            ]
        ]
    },
    {
        "id": "90140dad.9cbd9",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ set msg.complete for Banana and Kiwi",
        "info": "",
        "x": 780,
        "y": 980,
        "wires": []
    },
    {
        "id": "ead0afb6.a4763",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "175c6d3f.b71893"
            ]
        ]
    },
    {
        "id": "175c6d3f.b71893",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "3a873d4a.fcc3a2"
            ]
        ]
    },
    {
        "id": "88c0baeb.0f4c88",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 1220,
        "wires": [
            [
                "758b3990.2442c8"
            ]
        ]
    },
    {
        "id": "3a873d4a.fcc3a2",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "88c0baeb.0f4c88"
            ]
        ]
    },
    {
        "id": "758b3990.2442c8",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9b1551a8.97d09",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Join two consecutive messages into single message of array",
        "info": "",
        "x": 340,
        "y": 1160,
        "wires": []
    },
    {
        "id": "655d7318.217b3c",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 620,
        "y": 1260,
        "wires": []
    },
    {
        "id": "66cdfd.5cba2204",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually join message sequence to array",
        "info": "",
        "x": 780,
        "y": 1180,
        "wires": []
    },
    {
        "id": "be206cc6.f8141",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1440,
        "wires": [
            [
                "af8f52e6.e3d2f"
            ]
        ]
    },
    {
        "id": "af8f52e6.e3d2f",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "name,price\nApple,100\nOrange,20\nBanana,80\nKiwi,120",
        "output": "str",
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "89a32ebe.a92f1"
            ]
        ]
    },
    {
        "id": "681800f4.06545",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 1440,
        "wires": [
            [
                "8442c86.2559838"
            ]
        ]
    },
    {
        "id": "8442c86.2559838",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d15e01f7.d0a1f",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Merge two consecutive messages into single message of object using topic & payload ",
        "info": "",
        "x": 420,
        "y": 1320,
        "wires": []
    },
    {
        "id": "cccc022b.dfbbc",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input csv data into messages",
        "info": "",
        "x": 620,
        "y": 1480,
        "wires": []
    },
    {
        "id": "65aef8f1.143ca8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually join message sequence to object",
        "info": "",
        "x": 990,
        "y": 1400,
        "wires": []
    },
    {
        "id": "89a32ebe.a92f1",
        "type": "csv",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 520,
        "y": 1440,
        "wires": [
            [
                "39fd09fc.b87e66"
            ]
        ]
    },
    {
        "id": "39fd09fc.b87e66",
        "type": "change",
        "z": "03fb9f0e9aba473c",
        "name": "set topic & payload",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.price",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1440,
        "wires": [
            [
                "681800f4.06545"
            ]
        ]
    },
    {
        "id": "3fe71363.c5c67c",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ set topic (key) & payload (value)",
        "info": "",
        "x": 730,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3f482b62.8ec0f4",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1620,
        "wires": [
            [
                "63acc875.0d1458"
            ]
        ]
    },
    {
        "id": "63acc875.0d1458",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "[\n    { \"name\": \"Apple\" },\n    { \"price\": 100 },\n    { \"name\": \"Orange\"},\n    { \"price\": 20 },\n    { \"name\": \"Banana\"},\n    { \"price\": 80 },\n    { \"name\": \"Kiwi\"},\n    { \"price\": 120 }\n]",
        "output": "json",
        "x": 390,
        "y": 1620,
        "wires": [
            [
                "71aa03f2.69c42c"
            ]
        ]
    },
    {
        "id": "82b9afbd.380bd",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 1620,
        "wires": [
            [
                "df61f87d.0a7c38"
            ]
        ]
    },
    {
        "id": "df61f87d.0a7c38",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1620,
        "wires": []
    },
    {
        "id": "cff7cd24.8f70a",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Merge two consecutive messages into single message of object",
        "info": "",
        "x": 350,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c8b4d7b0.7d2048",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split array of objects data into messages",
        "info": "",
        "x": 640,
        "y": 1660,
        "wires": []
    },
    {
        "id": "5f07dcb1.2a8384",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually merge message sequence to object",
        "info": "",
        "x": 800,
        "y": 1580,
        "wires": []
    },
    {
        "id": "71aa03f2.69c42c",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 1620,
        "wires": [
            [
                "82b9afbd.380bd"
            ]
        ]
    },
    {
        "id": "dcbdbc0e.44c81",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1800,
        "wires": [
            [
                "df188870.193ec8"
            ]
        ]
    },
    {
        "id": "df188870.193ec8",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "[\n    { \"name\": \"Apple\" },\n    { \"price\": 100 },\n    { \"order\": 5 },\n    { \"order\": 1 },\n    { \"order\": 20 }\n]",
        "output": "json",
        "x": 390,
        "y": 1800,
        "wires": [
            [
                "61df0de9.80aaa4"
            ]
        ]
    },
    {
        "id": "77072ce9.cd2ba4",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "de78c2ec.efec3"
            ]
        ]
    },
    {
        "id": "de78c2ec.efec3",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1800,
        "wires": []
    },
    {
        "id": "f2b6aab7.9f69c8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Merge two consecutive messages and following messages into single message of object",
        "info": "",
        "x": 430,
        "y": 1720,
        "wires": []
    },
    {
        "id": "bf058927.d8e8b8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split array of objects data into messages",
        "info": "",
        "x": 640,
        "y": 1840,
        "wires": []
    },
    {
        "id": "2aab8acf.0673c6",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ manually merge message sequence to object",
        "info": "",
        "x": 800,
        "y": 1760,
        "wires": []
    },
    {
        "id": "61df0de9.80aaa4",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 1800,
        "wires": [
            [
                "77072ce9.cd2ba4"
            ]
        ]
    },
    {
        "id": "9279b993.ba7ed8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Example: Reduce Mode",
        "info": "Join node can be used to reduce message sequence to single value.  In reduce mode, reduce operation for a sequence can be described using JSONata expression with following special variables:\n- `$A`: the accumulated value,\n- `$I`: index of the message in the sequence,\n- `$N`: number of messages in the sequence.\n",
        "x": 180,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e415861b.d82e38",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2020,
        "wires": [
            [
                "7c8a4816.500ed8"
            ]
        ]
    },
    {
        "id": "7c8a4816.500ed8",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "[\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10\n]",
        "output": "json",
        "x": 380,
        "y": 2020,
        "wires": [
            [
                "7f64da1f.611014"
            ]
        ]
    },
    {
        "id": "5fde318f.23897",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "reduce",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "$A+payload",
        "reduceInit": "0",
        "reduceInitType": "num",
        "reduceFixup": "$A/$N",
        "x": 660,
        "y": 2020,
        "wires": [
            [
                "50977eaf.0490b"
            ]
        ]
    },
    {
        "id": "50977eaf.0490b",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 820,
        "y": 2020,
        "wires": []
    },
    {
        "id": "57bce4bf.38d02c",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Calculate average of message sequence",
        "info": "",
        "x": 270,
        "y": 1960,
        "wires": []
    },
    {
        "id": "d33e73a8.5896",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input array data into messages",
        "info": "",
        "x": 620,
        "y": 2060,
        "wires": []
    },
    {
        "id": "34482f62.61abd",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ reduce sequence to average value",
        "info": "",
        "x": 750,
        "y": 1980,
        "wires": []
    },
    {
        "id": "7f64da1f.611014",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 520,
        "y": 2020,
        "wires": [
            [
                "5fde318f.23897"
            ]
        ]
    },
    {
        "id": "e051fd76.1af1e",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2180,
        "wires": [
            [
                "14318520.397a9b"
            ]
        ]
    },
    {
        "id": "14318520.397a9b",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 380,
        "y": 2180,
        "wires": [
            [
                "41d85177.9b6f1"
            ]
        ]
    },
    {
        "id": "8fac92f8.0974c",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "reduce",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "$append($A,[payload])",
        "reduceInit": "[]",
        "reduceInitType": "json",
        "reduceFixup": "",
        "x": 660,
        "y": 2180,
        "wires": [
            [
                "5bf98f81.6db17"
            ]
        ]
    },
    {
        "id": "5bf98f81.6db17",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 820,
        "y": 2180,
        "wires": []
    },
    {
        "id": "7dc61153.a9062",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Convert message sequence to array",
        "info": "",
        "x": 250,
        "y": 2120,
        "wires": []
    },
    {
        "id": "7f14c8b2.d775f8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 610,
        "y": 2220,
        "wires": []
    },
    {
        "id": "85a2470f.5b9ce8",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ reduce sequence to arrray of payloads",
        "info": "",
        "x": 770,
        "y": 2140,
        "wires": []
    },
    {
        "id": "41d85177.9b6f1",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 520,
        "y": 2180,
        "wires": [
            [
                "8fac92f8.0974c"
            ]
        ]
    },
    {
        "id": "ec455af2.e31cb8",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2340,
        "wires": [
            [
                "693a0274.e62d6c"
            ]
        ]
    },
    {
        "id": "693a0274.e62d6c",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 380,
        "y": 2340,
        "wires": [
            [
                "d8374d2d.34863"
            ]
        ]
    },
    {
        "id": "805c900a.c6b7c",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "reduce",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": true,
        "reduceExp": "$append($A,[payload])",
        "reduceInit": "[]",
        "reduceInitType": "json",
        "reduceFixup": "",
        "x": 660,
        "y": 2340,
        "wires": [
            [
                "f8be3623.b8e358"
            ]
        ]
    },
    {
        "id": "f8be3623.b8e358",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 820,
        "y": 2340,
        "wires": []
    },
    {
        "id": "88fe5fe0.b08ca",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Convert message sequence to array in reverse order",
        "info": "",
        "x": 300,
        "y": 2280,
        "wires": []
    },
    {
        "id": "f95fff12.45fda",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 610,
        "y": 2380,
        "wires": []
    },
    {
        "id": "b7eecb8c.e6b858",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ reduce sequence to arrray of payloads in reverse order",
        "info": "",
        "x": 820,
        "y": 2300,
        "wires": []
    },
    {
        "id": "d8374d2d.34863",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 520,
        "y": 2340,
        "wires": [
            [
                "805c900a.c6b7c"
            ]
        ]
    },
    {
        "id": "fb404773.0eb728",
        "type": "inject",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2500,
        "wires": [
            [
                "8139dcd5.2300d"
            ]
        ]
    },
    {
        "id": "8139dcd5.2300d",
        "type": "template",
        "z": "03fb9f0e9aba473c",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana\nKiwi",
        "output": "str",
        "x": 380,
        "y": 2500,
        "wires": [
            [
                "c6ff515e.f95fd"
            ]
        ]
    },
    {
        "id": "fcff950d.0f67c8",
        "type": "join",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "mode": "reduce",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "$append($A,[{\t  \"name\": payload,\t  \"index\": $I\t}])",
        "reduceInit": "[]",
        "reduceInitType": "json",
        "reduceFixup": "",
        "x": 660,
        "y": 2500,
        "wires": [
            [
                "6d082a22.2fb214"
            ]
        ]
    },
    {
        "id": "6d082a22.2fb214",
        "type": "debug",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 820,
        "y": 2500,
        "wires": []
    },
    {
        "id": "19daaf11.40d701",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "Convert message sequence to array of objects with name and index",
        "info": "",
        "x": 350,
        "y": 2440,
        "wires": []
    },
    {
        "id": "b60f900.592e47",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↑ split input text data into messages",
        "info": "",
        "x": 610,
        "y": 2540,
        "wires": []
    },
    {
        "id": "62ffb2e1.28d8ec",
        "type": "comment",
        "z": "03fb9f0e9aba473c",
        "name": "↓ reduce sequence to arrray of objects",
        "info": "",
        "x": 760,
        "y": 2460,
        "wires": []
    },
    {
        "id": "c6ff515e.f95fd",
        "type": "split",
        "z": "03fb9f0e9aba473c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 520,
        "y": 2500,
        "wires": [
            [
                "fcff950d.0f67c8"
            ]
        ]
    },
    {
        "id": "6451c8bb.b52278",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "descending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "cb34307c.ac1dd"
            ]
        ]
    },
    {
        "id": "638546c.38f1fb8",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "db5d90ac.bbb3f"
            ]
        ]
    },
    {
        "id": "3ec02cae.012ce4",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as string in ascending order",
        "info": "",
        "x": 280,
        "y": 120,
        "wires": []
    },
    {
        "id": "db5d90ac.bbb3f",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"orange\",\n    \"banana\",\n    \"apple\",\n    \"pear\",\n    \"kiwi\"\n]",
        "output": "json",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "6451c8bb.b52278"
            ]
        ]
    },
    {
        "id": "cb34307c.ac1dd",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "a0de8ca4.6601f",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 510,
        "y": 500,
        "wires": [
            [
                "ca74a53e.90fc08"
            ]
        ]
    },
    {
        "id": "23d253dc.5e990c",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 500,
        "wires": [
            [
                "4ccd5aed.ca24e4"
            ]
        ]
    },
    {
        "id": "19946d36.185313",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as string",
        "info": "",
        "x": 220,
        "y": 440,
        "wires": []
    },
    {
        "id": "4ccd5aed.ca24e4",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"1024\",\n    \"86\",\n    \"256\",\n    \"100\",\n    \"9\"\n]",
        "output": "json",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "a0de8ca4.6601f"
            ]
        ]
    },
    {
        "id": "ca74a53e.90fc08",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 500,
        "wires": []
    },
    {
        "id": "d4b49c22.32685",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": true,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "45738f07.16416"
            ]
        ]
    },
    {
        "id": "87ce9955.924868",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 660,
        "wires": [
            [
                "30b81283.f0772e"
            ]
        ]
    },
    {
        "id": "f6e624df.703a88",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as number",
        "info": "",
        "x": 220,
        "y": 600,
        "wires": []
    },
    {
        "id": "30b81283.f0772e",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"1024\",\n    \"86\",\n    \"256\",\n    \"100\",\n    \"9\"\n]",
        "output": "json",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "d4b49c22.32685"
            ]
        ]
    },
    {
        "id": "45738f07.16416",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "b91c19b1.b66b18",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "price",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 510,
        "y": 820,
        "wires": [
            [
                "32dd80a1.226e4"
            ]
        ]
    },
    {
        "id": "adb0daa2.d85a48",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 820,
        "wires": [
            [
                "b3ee1b9e.dbf388"
            ]
        ]
    },
    {
        "id": "d1190f8b.9a74b",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array of objects payload using simple JSONata expression",
        "info": "",
        "x": 330,
        "y": 760,
        "wires": []
    },
    {
        "id": "b3ee1b9e.dbf388",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    {\n        \"name\": \"orange\", \n        \"price\": 80\n    },\n    {\n        \"name\": \"banana\",\n        \"price\": 250\n    },\n    {\n        \"name\": \"apple\",\n        \"price\": 100\n    },\n    {\n        \"name\": \"pear\",\n        \"price\": 150\n    },\n    {\n        \"name\": \"kiwi\",\n        \"price\": 320\n    }\n]",
        "output": "json",
        "x": 370,
        "y": 820,
        "wires": [
            [
                "b91c19b1.b66b18"
            ]
        ]
    },
    {
        "id": "32dd80a1.226e4",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 820,
        "wires": []
    },
    {
        "id": "735ec14e.4ed55",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "descending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "e8dc4ae5.f08598"
            ]
        ]
    },
    {
        "id": "c8ce4e74.9db68",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 340,
        "wires": [
            [
                "ea0384a6.1346b8"
            ]
        ]
    },
    {
        "id": "70333397.d78f6c",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as string in descending order",
        "info": "",
        "x": 280,
        "y": 280,
        "wires": []
    },
    {
        "id": "ea0384a6.1346b8",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"orange\",\n    \"banana\",\n    \"apple\",\n    \"pear\",\n    \"kiwi\"\n]",
        "output": "json",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "735ec14e.4ed55"
            ]
        ]
    },
    {
        "id": "e8dc4ae5.f08598",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "e4025b79.fccdd8",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort using object property as sorting key",
        "info": "",
        "x": 620,
        "y": 860,
        "wires": []
    },
    {
        "id": "2eaa93da.543cac",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of number",
        "info": "",
        "x": 600,
        "y": 700,
        "wires": []
    },
    {
        "id": "24da49c5.785676",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of string",
        "info": "",
        "x": 590,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc856174.29eb5",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of string in descending order",
        "info": "",
        "x": 650,
        "y": 380,
        "wires": []
    },
    {
        "id": "4bab755b.a073dc",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of string in ascending order",
        "info": "",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "e947beb9.2ec5e",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "$substring(\"0000\" & $string(price), -4) & name",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "6a4af14a.cafc4"
            ]
        ]
    },
    {
        "id": "d19d7ff5.135f2",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 980,
        "wires": [
            [
                "5eb37a3e.3c2184"
            ]
        ]
    },
    {
        "id": "91e34f52.e1413",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array of objects payload using complex JSONata expression",
        "info": "",
        "x": 330,
        "y": 920,
        "wires": []
    },
    {
        "id": "5eb37a3e.3c2184",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    {\n        \"name\": \"orange\", \n        \"price\": 100\n    },\n    {\n        \"name\": \"banana\",\n        \"price\": 200\n    },\n    {\n        \"name\": \"apple\",\n        \"price\": 100\n    },\n    {\n        \"name\": \"pear\",\n        \"price\": 200\n    },\n    {\n        \"name\": \"kiwi\",\n        \"price\": 200\n    }\n]",
        "output": "json",
        "x": 370,
        "y": 980,
        "wires": [
            [
                "e947beb9.2ec5e"
            ]
        ]
    },
    {
        "id": "6a4af14a.cafc4",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 980,
        "wires": []
    },
    {
        "id": "1b068260.e3200e",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort using object two property (price and name) as sorting keys",
        "info": "",
        "x": 690,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7ced03b9.75dd8c",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Example: Sort Array Payload",
        "info": "Sort node can be used to message payload that points to a JavaScript array.  It can specify sort order and sort key.  Sort key can be payload value or JSONata expression.  If JSONata expression is used, the expression is applied to `payload` value.\n",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "60b477b9.188ce8",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "",
        "targetType": "seq",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "38fcd115.f147ae"
            ]
        ]
    },
    {
        "id": "35b577bf.827978",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1260,
        "wires": [
            [
                "5a8dfb10.5ed8b4"
            ]
        ]
    },
    {
        "id": "e8e4517b.e2139",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as string in ascending order",
        "info": "Sort node can be used to message sequence that contains `parts` property.  If JSONata expression is used, the expression is applied to input message.",
        "x": 260,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5a8dfb10.5ed8b4",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"orange\",\n    \"banana\",\n    \"apple\",\n    \"pear\",\n    \"kiwi\"\n]",
        "output": "json",
        "x": 350,
        "y": 1260,
        "wires": [
            [
                "a509486a.9c32a8"
            ]
        ]
    },
    {
        "id": "38fcd115.f147ae",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1260,
        "wires": []
    },
    {
        "id": "eca99b1d.c456c8",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort message sequence in ascending order",
        "info": "",
        "x": 750,
        "y": 1300,
        "wires": []
    },
    {
        "id": "a509486a.9c32a8",
        "type": "split",
        "z": "f939c00672b229ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 490,
        "y": 1260,
        "wires": [
            [
                "60b477b9.188ce8"
            ]
        ]
    },
    {
        "id": "56294459.e2431c",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↓ split array payload to message sequence",
        "info": "",
        "x": 600,
        "y": 1220,
        "wires": []
    },
    {
        "id": "f8ab27f2.b81d78",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "",
        "targetType": "seq",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "75369287.5bb00c"
            ]
        ]
    },
    {
        "id": "df79c07e.d9dce",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1600,
        "wires": [
            [
                "8e1e5b1e.a979e8"
            ]
        ]
    },
    {
        "id": "de7c57f3.7ecae8",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as string",
        "info": "",
        "x": 200,
        "y": 1520,
        "wires": []
    },
    {
        "id": "8e1e5b1e.a979e8",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"1024\",\n    \"86\",\n    \"256\",\n    \"100\",\n    \"9\"\n]",
        "output": "json",
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "4392ddd6.e30404"
            ]
        ]
    },
    {
        "id": "75369287.5bb00c",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1600,
        "wires": []
    },
    {
        "id": "f9100b9d.065088",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": true,
        "target": "",
        "targetType": "seq",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 630,
        "y": 1780,
        "wires": [
            [
                "53127c8c.cb4b64"
            ]
        ]
    },
    {
        "id": "c010d098.ac0e8",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "902c97aa.8b2958"
            ]
        ]
    },
    {
        "id": "8531cf78.dcdfc",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as number",
        "info": "",
        "x": 200,
        "y": 1700,
        "wires": []
    },
    {
        "id": "902c97aa.8b2958",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"1024\",\n    \"86\",\n    \"256\",\n    \"100\",\n    \"9\"\n]",
        "output": "json",
        "x": 350,
        "y": 1780,
        "wires": [
            [
                "99461434.772718"
            ]
        ]
    },
    {
        "id": "53127c8c.cb4b64",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ea246a52.4b9d88",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "",
        "targetType": "seq",
        "msgKey": "price",
        "msgKeyType": "jsonata",
        "seqKey": "payload.price",
        "seqKeyType": "jsonata",
        "x": 630,
        "y": 1960,
        "wires": [
            [
                "2d548e4c.9adbd2"
            ]
        ]
    },
    {
        "id": "d69bd6df.849d68",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "e6ef0fbc.6fc22"
            ]
        ]
    },
    {
        "id": "ee5f9da5.d21ee",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array of objects payload using simple JSONata expression",
        "info": "",
        "x": 310,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e6ef0fbc.6fc22",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    {\n        \"name\": \"orange\", \n        \"price\": 80\n    },\n    {\n        \"name\": \"banana\",\n        \"price\": 250\n    },\n    {\n        \"name\": \"apple\",\n        \"price\": 100\n    },\n    {\n        \"name\": \"pear\",\n        \"price\": 150\n    },\n    {\n        \"name\": \"kiwi\",\n        \"price\": 320\n    }\n]",
        "output": "json",
        "x": 350,
        "y": 1960,
        "wires": [
            [
                "fcfd304c.562c9"
            ]
        ]
    },
    {
        "id": "2d548e4c.9adbd2",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1960,
        "wires": []
    },
    {
        "id": "4ec23d0b.a4f014",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "descending",
        "as_num": false,
        "target": "",
        "targetType": "seq",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 630,
        "y": 1420,
        "wires": [
            [
                "b1f8d641.a96a78"
            ]
        ]
    },
    {
        "id": "4aa6a253.159aec",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1420,
        "wires": [
            [
                "f28101b7.f4b21"
            ]
        ]
    },
    {
        "id": "63d42ecf.fd933",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array payload as string in descending order",
        "info": "",
        "x": 260,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f28101b7.f4b21",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    \"orange\",\n    \"banana\",\n    \"apple\",\n    \"pear\",\n    \"kiwi\"\n]",
        "output": "json",
        "x": 350,
        "y": 1420,
        "wires": [
            [
                "685d7c1b.4f92b4"
            ]
        ]
    },
    {
        "id": "b1f8d641.a96a78",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c112dd05.1543e",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort using object property as sorting key",
        "info": "",
        "x": 740,
        "y": 2000,
        "wires": []
    },
    {
        "id": "5c5ff25a.0f22bc",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of number",
        "info": "",
        "x": 720,
        "y": 1820,
        "wires": []
    },
    {
        "id": "d0270e9b.04b7d",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of string",
        "info": "",
        "x": 710,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6ae587cd.cf9478",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort payload as array of string in descending order",
        "info": "",
        "x": 770,
        "y": 1460,
        "wires": []
    },
    {
        "id": "6fba3dab.8218c4",
        "type": "sort",
        "z": "f939c00672b229ae",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "",
        "targetType": "seq",
        "msgKey": "$substring(\"0000\" & $string(price), -4) & name",
        "msgKeyType": "jsonata",
        "seqKey": "$substring(\"0000\" & $string(payload.price), -4) & payload.name",
        "seqKeyType": "jsonata",
        "x": 630,
        "y": 2140,
        "wires": [
            [
                "95f7f1b0.39fac"
            ]
        ]
    },
    {
        "id": "892b1f19.60247",
        "type": "inject",
        "z": "f939c00672b229ae",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2140,
        "wires": [
            [
                "80ca6396.f55bb"
            ]
        ]
    },
    {
        "id": "c2da4a48.d35cd8",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Sort array of objects payload using complex JSONata expression",
        "info": "",
        "x": 310,
        "y": 2060,
        "wires": []
    },
    {
        "id": "80ca6396.f55bb",
        "type": "template",
        "z": "f939c00672b229ae",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[\n    {\n        \"name\": \"orange\", \n        \"price\": 100\n    },\n    {\n        \"name\": \"banana\",\n        \"price\": 200\n    },\n    {\n        \"name\": \"apple\",\n        \"price\": 100\n    },\n    {\n        \"name\": \"pear\",\n        \"price\": 200\n    },\n    {\n        \"name\": \"kiwi\",\n        \"price\": 200\n    }\n]",
        "output": "json",
        "x": 350,
        "y": 2140,
        "wires": [
            [
                "4cda7453.75eb1c"
            ]
        ]
    },
    {
        "id": "95f7f1b0.39fac",
        "type": "debug",
        "z": "f939c00672b229ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 2140,
        "wires": []
    },
    {
        "id": "24472c63.d12294",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↑ sort using object two property (price and name) as sorting keys",
        "info": "",
        "x": 810,
        "y": 2180,
        "wires": []
    },
    {
        "id": "685d7c1b.4f92b4",
        "type": "split",
        "z": "f939c00672b229ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 490,
        "y": 1420,
        "wires": [
            [
                "4ec23d0b.a4f014"
            ]
        ]
    },
    {
        "id": "4392ddd6.e30404",
        "type": "split",
        "z": "f939c00672b229ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 490,
        "y": 1600,
        "wires": [
            [
                "f8ab27f2.b81d78"
            ]
        ]
    },
    {
        "id": "99461434.772718",
        "type": "split",
        "z": "f939c00672b229ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 490,
        "y": 1780,
        "wires": [
            [
                "f9100b9d.065088"
            ]
        ]
    },
    {
        "id": "fcfd304c.562c9",
        "type": "split",
        "z": "f939c00672b229ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 490,
        "y": 1960,
        "wires": [
            [
                "ea246a52.4b9d88"
            ]
        ]
    },
    {
        "id": "4cda7453.75eb1c",
        "type": "split",
        "z": "f939c00672b229ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 490,
        "y": 2140,
        "wires": [
            [
                "6fba3dab.8218c4"
            ]
        ]
    },
    {
        "id": "1b2b8efc.b5aa51",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↓ split array payload to message sequence",
        "info": "",
        "x": 600,
        "y": 1380,
        "wires": []
    },
    {
        "id": "972a454c.99b5e8",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↓ split array payload to message sequence",
        "info": "",
        "x": 600,
        "y": 1560,
        "wires": []
    },
    {
        "id": "39123b6a.ee5bb4",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↓ split array payload to message sequence",
        "info": "",
        "x": 600,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7809a5ac.eb0f8c",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↓ split array payload to message sequence",
        "info": "",
        "x": 600,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f62c6678.d4da08",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "↓ split array payload to message sequence",
        "info": "",
        "x": 600,
        "y": 2100,
        "wires": []
    },
    {
        "id": "2438c53f.71a0da",
        "type": "comment",
        "z": "f939c00672b229ae",
        "name": "Example: Sort Message Sequence",
        "info": "Sort node can be used to message sequence that contains `parts` property.  If JSONata expression is used, the expression is applied to input message.",
        "x": 180,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f94ffc33.76f83",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "Example: Split Message Payload",
        "info": "Split node can be used to split message payload into multiple messages.",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "657bb57c.a3f98c",
        "type": "split",
        "z": "a4d9e552167477d2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 160,
        "wires": [
            [
                "14228ff.ae24f7"
            ]
        ]
    },
    {
        "id": "2afece55.b87de2",
        "type": "inject",
        "z": "a4d9e552167477d2",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "cfca3863.d961d8"
            ]
        ]
    },
    {
        "id": "cfca3863.d961d8",
        "type": "template",
        "z": "a4d9e552167477d2",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana",
        "output": "str",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "657bb57c.a3f98c"
            ]
        ]
    },
    {
        "id": "14228ff.ae24f7",
        "type": "debug",
        "z": "a4d9e552167477d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "9a3c9494.b5d178",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "Split input text by specified string",
        "info": "",
        "x": 250,
        "y": 120,
        "wires": []
    },
    {
        "id": "38c873c.5ae718c",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "↑ split by newline (\\\\n)",
        "info": "",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "bdfa12b9.3fbbc",
        "type": "split",
        "z": "a4d9e552167477d2",
        "name": "",
        "splt": "4",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 280,
        "wires": [
            [
                "debf23bb.c0245"
            ]
        ]
    },
    {
        "id": "7c0948db.e35d38",
        "type": "inject",
        "z": "a4d9e552167477d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "7f791b7d.94cad4"
            ]
        ]
    },
    {
        "id": "7f791b7d.94cad4",
        "type": "template",
        "z": "a4d9e552167477d2",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Apple\nOrange\nBanana",
        "output": "str",
        "x": 390,
        "y": 280,
        "wires": [
            [
                "bdfa12b9.3fbbc"
            ]
        ]
    },
    {
        "id": "debf23bb.c0245",
        "type": "debug",
        "z": "a4d9e552167477d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "f05e98a3.4182c8",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "Split input text by specified number of characters",
        "info": "",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "86b52b51.2258d8",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "↑ split by four characters",
        "info": "",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "71d7c0e0.c0316",
        "type": "split",
        "z": "a4d9e552167477d2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 420,
        "wires": [
            [
                "bee5b6a2.a955a8"
            ]
        ]
    },
    {
        "id": "1cdc2df9.bebdd2",
        "type": "inject",
        "z": "a4d9e552167477d2",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 420,
        "wires": [
            [
                "f30df13c.19475"
            ]
        ]
    },
    {
        "id": "f30df13c.19475",
        "type": "template",
        "z": "a4d9e552167477d2",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "[ \n    \"Apple\",\n    \"Orange\",\n    \"Banana\"\n]",
        "output": "json",
        "x": 390,
        "y": 420,
        "wires": [
            [
                "71d7c0e0.c0316"
            ]
        ]
    },
    {
        "id": "bee5b6a2.a955a8",
        "type": "debug",
        "z": "a4d9e552167477d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 680,
        "y": 420,
        "wires": []
    },
    {
        "id": "b2c731fe.abda4",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "Split input array",
        "info": "",
        "x": 200,
        "y": 380,
        "wires": []
    },
    {
        "id": "1f557227.d0910e",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "↑ split array",
        "info": "",
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "c0d43ff4.291d8",
        "type": "split",
        "z": "a4d9e552167477d2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 530,
        "y": 540,
        "wires": [
            [
                "fc9fe458.50fd18"
            ]
        ]
    },
    {
        "id": "6d52ce8a.0c715",
        "type": "inject",
        "z": "a4d9e552167477d2",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 540,
        "wires": [
            [
                "bdeb8c21.1c6b7"
            ]
        ]
    },
    {
        "id": "bdeb8c21.1c6b7",
        "type": "template",
        "z": "a4d9e552167477d2",
        "name": "data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{ \n    \"Apple\": 80,\n    \"Orange\": 100,\n    \"Banana\": 50\n}",
        "output": "json",
        "x": 390,
        "y": 540,
        "wires": [
            [
                "c0d43ff4.291d8"
            ]
        ]
    },
    {
        "id": "fc9fe458.50fd18",
        "type": "debug",
        "z": "a4d9e552167477d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 660,
        "y": 540,
        "wires": []
    },
    {
        "id": "48956e14.79b86",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "Split object to key/value pairs",
        "info": "",
        "x": 240,
        "y": 500,
        "wires": []
    },
    {
        "id": "d528c2c2.6efc7",
        "type": "comment",
        "z": "a4d9e552167477d2",
        "name": "↑ split object",
        "info": "",
        "x": 550,
        "y": 580,
        "wires": []
    },
    {
        "id": "330f4888.cccb28",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "ed11f8d6.5e3c88"
            ]
        ]
    },
    {
        "id": "a0288b44.71d488",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "369cbe42.4af9f2"
            ]
        ]
    },
    {
        "id": "ed11f8d6.5e3c88",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "CSV data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "Apple,100,Canada\nOrange,120,USA\nBanana,80,Philippines",
        "output": "str",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "a0288b44.71d488"
            ]
        ]
    },
    {
        "id": "369cbe42.4af9f2",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 120,
        "wires": []
    },
    {
        "id": "783cfaa6.52fbe4",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Parse CSV with default column name as messages",
        "info": "CSV node can parse input CSV data.\nParsed CSV record can be sent as a message sequence.\nEach message payload points to an object with `col`*N* as a key and CSV value as a value.\n",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "98c9d44d.4457b8",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "65476517.3d760c"
            ]
        ]
    },
    {
        "id": "76df98f7.0dcd08",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 500,
        "y": 260,
        "wires": [
            [
                "557979e0.e6b588"
            ]
        ]
    },
    {
        "id": "65476517.3d760c",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "CSV data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "Apple,100,Canada\nOrange,120,USA\nBanana,80,Philippines",
        "output": "str",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "76df98f7.0dcd08"
            ]
        ]
    },
    {
        "id": "557979e0.e6b588",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 260,
        "wires": []
    },
    {
        "id": "187f4ab3.4c9ab5",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Parse CSV with default column name as array",
        "info": "CSV node can send a single message with array of parsed CSV records.\nEach element of the array consists of objects with key-value pair.",
        "x": 220,
        "y": 200,
        "wires": []
    },
    {
        "id": "1216e95b.1b1e87",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "e41ffbbc.de2ed8"
            ]
        ]
    },
    {
        "id": "286828bc.9233c8",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "kind,price,origin",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 520,
        "y": 400,
        "wires": [
            [
                "9d8218c.5550ee8"
            ]
        ]
    },
    {
        "id": "e41ffbbc.de2ed8",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "CSV data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "Apple,100,Canada\nOrange,120,USA\nBanana,80,Philippines",
        "output": "str",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "286828bc.9233c8"
            ]
        ]
    },
    {
        "id": "9d8218c.5550ee8",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "aaa1ee8f.21e2c",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Parse CSV with specified column name as messages",
        "info": "CSV node can specify column name of parsed objects in its settings panel.",
        "x": 260,
        "y": 340,
        "wires": []
    },
    {
        "id": "24093558.0315aa",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "80abaee1.5fa7f"
            ]
        ]
    },
    {
        "id": "d4d2ca3f.1d9488",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 520,
        "y": 520,
        "wires": [
            [
                "b52791c3.08967"
            ]
        ]
    },
    {
        "id": "80abaee1.5fa7f",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "CSV data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "kind,price,origin\nApple,100,Canada\nOrange,120,USA\nBanana,80,Philippines",
        "output": "str",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "d4d2ca3f.1d9488"
            ]
        ]
    },
    {
        "id": "b52791c3.08967",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 520,
        "wires": []
    },
    {
        "id": "85091361.85644",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Parse CSV with column name in first row as messages",
        "info": "CSV node can use first row of input CSV text as a column name of each record object.\n",
        "x": 260,
        "y": 460,
        "wires": []
    },
    {
        "id": "9e93169c.b763a8",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Convert JavaScript object to CSV",
        "info": "CSV node can convert a JavaScript object to CSV text.\nEach object contains key-value pair of specified properties.\n",
        "x": 220,
        "y": 580,
        "wires": []
    },
    {
        "id": "8ca41fee.3303d",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "c466905b.e8c61"
            ]
        ]
    },
    {
        "id": "65146d20.d78204",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "kind,price",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 550,
        "y": 640,
        "wires": [
            [
                "92e99e67.a37d8"
            ]
        ]
    },
    {
        "id": "c466905b.e8c61",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": 100,\n    \"origin\": \"Canada\"\n}",
        "output": "json",
        "x": 380,
        "y": 640,
        "wires": [
            [
                "65146d20.d78204"
            ]
        ]
    },
    {
        "id": "92e99e67.a37d8",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 640,
        "wires": []
    },
    {
        "id": "e89019c5.70ae78",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Convert array of JavaScript objects to CSV",
        "info": "CSV node can convert an array of JavaScript objects to multi-line CSV text.",
        "x": 240,
        "y": 700,
        "wires": []
    },
    {
        "id": "bd0d82ed.7b28",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 760,
        "wires": [
            [
                "1d857b8d.3a4014"
            ]
        ]
    },
    {
        "id": "66a37667.16ebd8",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "kind,price",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 540,
        "y": 760,
        "wires": [
            [
                "859725fd.dc93d8"
            ]
        ]
    },
    {
        "id": "1d857b8d.3a4014",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "[\n    {\n        \"kind\": \"Apple\",\n        \"price\": 100,\n        \"origin\": \"Canada\"\n    },\n    {\n        \"kind\": \"Orange\",\n        \"price\": 120,\n        \"origin\": \"USA\"\n    },\n    {\n        \"kind\": \"Banana\",\n        \"price\": 80,\n        \"origin\": \"Philippines\"\n    }\n]",
        "output": "json",
        "x": 370,
        "y": 760,
        "wires": [
            [
                "66a37667.16ebd8"
            ]
        ]
    },
    {
        "id": "859725fd.dc93d8",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 760,
        "wires": []
    },
    {
        "id": "b05816ab.7f2b08",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Specify column names in input message",
        "info": "Column names can be specified by `columns` property of incoming message.\n",
        "x": 980,
        "y": 60,
        "wires": []
    },
    {
        "id": "39205b5c.690684",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 120,
        "wires": [
            [
                "526b59ba.2fa068"
            ]
        ]
    },
    {
        "id": "b78a407e.2d083",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1490,
        "y": 120,
        "wires": [
            [
                "8b7084dd.986f68"
            ]
        ]
    },
    {
        "id": "526b59ba.2fa068",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "[\n    {\n        \"kind\": \"Apple\",\n        \"price\": 100,\n        \"origin\": \"Canada\"\n    },\n    {\n        \"kind\": \"Orange\",\n        \"price\": 120,\n        \"origin\": \"USA\"\n    },\n    {\n        \"kind\": \"Banana\",\n        \"price\": 80,\n        \"origin\": \"Philippines\"\n    }\n]",
        "output": "json",
        "x": 1110,
        "y": 120,
        "wires": [
            [
                "b204077a.227778"
            ]
        ]
    },
    {
        "id": "8b7084dd.986f68",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 120,
        "wires": []
    },
    {
        "id": "b204077a.227778",
        "type": "change",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "columns",
                "pt": "msg",
                "to": "kind,price",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 120,
        "wires": [
            [
                "b78a407e.2d083"
            ]
        ]
    },
    {
        "id": "1ae28939.9f5fc7",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Send column name when reset property set",
        "info": "CSV node can send column names at first or `reset` property exists in input message.",
        "x": 990,
        "y": 200,
        "wires": []
    },
    {
        "id": "c16ad95b.4f9ac8",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "Apple",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 930,
        "y": 260,
        "wires": [
            [
                "7f7bfc72.aed104"
            ]
        ]
    },
    {
        "id": "870620b9.95343",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "kind,price",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "d960de42.619c7"
            ]
        ]
    },
    {
        "id": "7f7bfc72.aed104",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": 100,\n    \"origin\": \"Canada\"\n}",
        "output": "json",
        "x": 1150,
        "y": 260,
        "wires": [
            [
                "870620b9.95343"
            ]
        ]
    },
    {
        "id": "d960de42.619c7",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 380,
        "wires": []
    },
    {
        "id": "6f8296e.f95ca68",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "Orange",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 930,
        "y": 320,
        "wires": [
            [
                "c37d0dfa.ec1ab"
            ]
        ]
    },
    {
        "id": "c37d0dfa.ec1ab",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Orange\",\n    \"price\": 120,\n    \"origin\": \"USA\"\n}\n",
        "output": "json",
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "870620b9.95343"
            ]
        ]
    },
    {
        "id": "35209fe2.16926",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "Banana & reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "reset",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 960,
        "y": 380,
        "wires": [
            [
                "afd4e6b3.624a28"
            ]
        ]
    },
    {
        "id": "afd4e6b3.624a28",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Banana\",\n    \"price\": 80,\n    \"origin\": \"Philippines\"\n}",
        "output": "json",
        "x": 1150,
        "y": 380,
        "wires": [
            [
                "870620b9.95343"
            ]
        ]
    },
    {
        "id": "195c168c.44f149",
        "type": "inject",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 960,
        "y": 520,
        "wires": [
            [
                "b270564c.171908"
            ]
        ]
    },
    {
        "id": "8ec8cf9e.103fa",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1300,
        "y": 520,
        "wires": [
            [
                "5c5254a8.bc562c"
            ]
        ]
    },
    {
        "id": "b270564c.171908",
        "type": "template",
        "z": "c2e1f751978fcd7d",
        "name": "CSV data",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "mustache",
        "template": "kind,price,origin\nApple,100,Canada\nOrange,120,USA\nBanana,80,Philippines\nKiwi,51,Dubai",
        "output": "str",
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "8ec8cf9e.103fa"
            ]
        ]
    },
    {
        "id": "1c7be442.6a4bdc",
        "type": "debug",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 520,
        "wires": []
    },
    {
        "id": "d3da7cfb.cf596",
        "type": "comment",
        "z": "c2e1f751978fcd7d",
        "name": "Join parsed CSV message sequence using join node",
        "info": "Parset CSV message sequence can be joined by join node.",
        "x": 1030,
        "y": 460,
        "wires": []
    },
    {
        "id": "a07c9e26.c84fd",
        "type": "csv",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "kind,price",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1610,
        "y": 520,
        "wires": [
            [
                "1c7be442.6a4bdc"
            ]
        ]
    },
    {
        "id": "5c5254a8.bc562c",
        "type": "join",
        "z": "c2e1f751978fcd7d",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1450,
        "y": 520,
        "wires": [
            [
                "a07c9e26.c84fd"
            ]
        ]
    },
    {
        "id": "8c5224a6.201b88",
        "type": "inject",
        "z": "285385cccc33c062",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "d6c67e51.0d709"
            ]
        ]
    },
    {
        "id": "d6c67e51.0d709",
        "type": "template",
        "z": "285385cccc33c062",
        "name": "HTML text",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "<html>\n    <head>\n        <title>List of Fruits</title>\n    </head>\n    <body>\n        <ul>\n            <li class=\"Item\">Apple</li>\n            <li class=\"Item\">Orange</li>\n            <li class=\"Item\">Banana</li>\n        </ul>\n    </body>\n</html>\n",
        "output": "str",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "599a1155.61a5c"
            ]
        ]
    },
    {
        "id": "b0d5cd89.338df",
        "type": "comment",
        "z": "285385cccc33c062",
        "name": "Extract array of HTML element by CSS selector",
        "info": "HTML node can be used to extract elements in HTML document as an array using CSS selector.",
        "x": 240,
        "y": 40,
        "wires": []
    },
    {
        "id": "599a1155.61a5c",
        "type": "html",
        "z": "285385cccc33c062",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".Item",
        "ret": "html",
        "as": "single",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "942b23d1.cce09"
            ]
        ]
    },
    {
        "id": "942b23d1.cce09",
        "type": "debug",
        "z": "285385cccc33c062",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "a44973e8.6319b",
        "type": "inject",
        "z": "285385cccc33c062",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "de1b012e.96ec3"
            ]
        ]
    },
    {
        "id": "de1b012e.96ec3",
        "type": "template",
        "z": "285385cccc33c062",
        "name": "HTML text",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "<html>\n    <head>\n        <title>List of Fruits</title>\n    </head>\n    <body>\n        <ul>\n            <li class=\"Item\">Apple</li>\n            <li class=\"Item\">Orange</li>\n            <li class=\"Item\">Banana</li>\n        </ul>\n    </body>\n</html>\n",
        "output": "str",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "cee70712.6f3538"
            ]
        ]
    },
    {
        "id": "99e32bc7.c8e508",
        "type": "comment",
        "z": "285385cccc33c062",
        "name": "Extract sequence of HTML element by CSS selector",
        "info": "HTML node can be used to extract elements in HTML document as a messege sequence using CSS selector.",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "cee70712.6f3538",
        "type": "html",
        "z": "285385cccc33c062",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".Item",
        "ret": "html",
        "as": "multi",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "17f25482.d4b56b"
            ]
        ]
    },
    {
        "id": "17f25482.d4b56b",
        "type": "debug",
        "z": "285385cccc33c062",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "653ce9aa.b6a1c8",
        "type": "inject",
        "z": "285385cccc33c062",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 360,
        "wires": [
            [
                "52a16f7f.447d8"
            ]
        ]
    },
    {
        "id": "52a16f7f.447d8",
        "type": "template",
        "z": "285385cccc33c062",
        "name": "HTML text",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "<html>\n    <head>\n        <title>List of Fruits</title>\n    </head>\n    <body>\n        <ul>\n            <li class=\"Item\">Apple</li>\n            <li class=\"Item\">Orange</li>\n            <li class=\"Item\">Banana</li>\n        </ul>\n    </body>\n</html>\n",
        "output": "str",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "a52319c3.89b008"
            ]
        ]
    },
    {
        "id": "8bc35379.31d99",
        "type": "comment",
        "z": "285385cccc33c062",
        "name": "Extract array of HTML element by CSS selector specified in message",
        "info": "CSS selector for HTML node can be specified by `select` property of input message.",
        "x": 310,
        "y": 300,
        "wires": []
    },
    {
        "id": "9c49de8a.bad25",
        "type": "html",
        "z": "285385cccc33c062",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "",
        "ret": "html",
        "as": "single",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "d4f4b987.278a68"
            ]
        ]
    },
    {
        "id": "d4f4b987.278a68",
        "type": "debug",
        "z": "285385cccc33c062",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "a52319c3.89b008",
        "type": "change",
        "z": "285385cccc33c062",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "select",
                "pt": "msg",
                "to": ".Item",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 360,
        "wires": [
            [
                "9c49de8a.bad25"
            ]
        ]
    },
    {
        "id": "d015e1d0e45c0b31",
        "type": "inject",
        "z": "35cfd6610edcee1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "6030a7ce9add6e1e"
            ]
        ]
    },
    {
        "id": "e05daf712ce4a50c",
        "type": "comment",
        "z": "35cfd6610edcee1d",
        "name": "Convert JSON string to JS object",
        "info": "JSON node can convert JSON string to JavaScript object.",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "6030a7ce9add6e1e",
        "type": "template",
        "z": "35cfd6610edcee1d",
        "name": "JSON string",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": 100,\n    \"origin\": \"Canada\"\n}",
        "output": "str",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "8b77f03488378542"
            ]
        ]
    },
    {
        "id": "1162e75d2f7f86a6",
        "type": "debug",
        "z": "35cfd6610edcee1d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "8b77f03488378542",
        "type": "json",
        "z": "35cfd6610edcee1d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 100,
        "wires": [
            [
                "1162e75d2f7f86a6"
            ]
        ]
    },
    {
        "id": "cb13761f.56c328",
        "type": "inject",
        "z": "35cfd6610edcee1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "c607642a.78c3c8"
            ]
        ]
    },
    {
        "id": "180b1e22.0074e2",
        "type": "comment",
        "z": "35cfd6610edcee1d",
        "name": "Convert JS object to JSON string",
        "info": "JSON node can convert JavaScript object to JSON string.",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "c607642a.78c3c8",
        "type": "template",
        "z": "35cfd6610edcee1d",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": 100,\n    \"origin\": \"Canada\"\n}",
        "output": "json",
        "x": 340,
        "y": 220,
        "wires": [
            [
                "bf309844.fa12e8"
            ]
        ]
    },
    {
        "id": "5b6b130b.72a14c",
        "type": "debug",
        "z": "35cfd6610edcee1d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "bf309844.fa12e8",
        "type": "json",
        "z": "35cfd6610edcee1d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "5b6b130b.72a14c"
            ]
        ]
    },
    {
        "id": "2b18621b.e2670e",
        "type": "inject",
        "z": "35cfd6610edcee1d",
        "name": "OK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "5986faee.aef954"
            ]
        ]
    },
    {
        "id": "59acf99.9a92308",
        "type": "comment",
        "z": "35cfd6610edcee1d",
        "name": "Validate input JSON string",
        "info": "JSON node can validate input JSON string using [JSON schema](https://json-schema.org/) when converting to JavaScript object.",
        "x": 170,
        "y": 280,
        "wires": []
    },
    {
        "id": "5986faee.aef954",
        "type": "template",
        "z": "35cfd6610edcee1d",
        "name": "JSON string",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": 100,\n    \"origin\": \"Canada\"\n}",
        "output": "json",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "f8a67c6d.4f1f1"
            ]
        ]
    },
    {
        "id": "ca27c92c.ad7cb8",
        "type": "debug",
        "z": "35cfd6610edcee1d",
        "name": "Validate input JSON string",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "2fad9978.ea1916",
        "type": "json",
        "z": "35cfd6610edcee1d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "ca27c92c.ad7cb8"
            ]
        ]
    },
    {
        "id": "f8a67c6d.4f1f1",
        "type": "template",
        "z": "35cfd6610edcee1d",
        "name": "Schema",
        "field": "schema",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"kind\": {\n            \"type\": \"string\"\n        },\n        \"price\": {\n            \"type\": \"number\"\n        },\n        \"origin\": {\n            \"type\": \"string\"\n        }\n    }\n}",
        "output": "json",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "2fad9978.ea1916"
            ]
        ]
    },
    {
        "id": "8337e847.ac18d8",
        "type": "inject",
        "z": "35cfd6610edcee1d",
        "name": "NG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "fa14d8bf.1ac938"
            ]
        ]
    },
    {
        "id": "fa14d8bf.1ac938",
        "type": "template",
        "z": "35cfd6610edcee1d",
        "name": "JSON string",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": \"100\",\n    \"origin\": \"Canada\"\n}",
        "output": "str",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "2207c87d14d8da08"
            ]
        ]
    },
    {
        "id": "2207c87d14d8da08",
        "type": "debug",
        "z": "35cfd6610edcee1d",
        "name": "Validate input JSON string II",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 420,
        "wires": []
    },
    {
        "id": "7bd8487c5702390a",
        "type": "xml",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "06f0c82ee1367337"
            ]
        ]
    },
    {
        "id": "b45eea9cb8d8d49c",
        "type": "inject",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "98c17d2644ad1423"
            ]
        ]
    },
    {
        "id": "462868819daaf26e",
        "type": "comment",
        "z": "1e9e64cd1d94cdb3",
        "name": "Convert JavaScript object to XML",
        "info": "XML node can convert JavaScript object to XML string.",
        "x": 180,
        "y": 20,
        "wires": []
    },
    {
        "id": "06f0c82ee1367337",
        "type": "debug",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 80,
        "wires": []
    },
    {
        "id": "98c17d2644ad1423",
        "type": "template",
        "z": "1e9e64cd1d94cdb3",
        "name": "JS object",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"kind\": \"Apple\",\n    \"price\": 100,\n    \"origin\": \"Canada\"\n}",
        "output": "json",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "7bd8487c5702390a"
            ]
        ]
    },
    {
        "id": "93e423a9.a407d",
        "type": "xml",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "2d0dde7e.a50082"
            ]
        ]
    },
    {
        "id": "ba1dab90.8d1da8",
        "type": "inject",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "16617f26.14ced1"
            ]
        ]
    },
    {
        "id": "a9f97b00.57d658",
        "type": "comment",
        "z": "1e9e64cd1d94cdb3",
        "name": "Convert XML to JavaScript object",
        "info": "XML node can convert XML string to JavaScript object.",
        "x": 180,
        "y": 140,
        "wires": []
    },
    {
        "id": "2d0dde7e.a50082",
        "type": "debug",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "16617f26.14ced1",
        "type": "template",
        "z": "1e9e64cd1d94cdb3",
        "name": "XML string",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fruit id=\"100\">\n    <kind>Apple</kind>\n    <price>100</price>\n    <origin>Canada</origin>\n</fruit>",
        "output": "str",
        "x": 310,
        "y": 200,
        "wires": [
            [
                "93e423a9.a407d"
            ]
        ]
    },
    {
        "id": "581bd648.636628",
        "type": "xml",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 650,
        "y": 320,
        "wires": [
            [
                "b74237dc.1e5028"
            ]
        ]
    },
    {
        "id": "d0899f9b.f1ac6",
        "type": "inject",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "f04ffb9a.68edb8"
            ]
        ]
    },
    {
        "id": "8a214c05.dc61f",
        "type": "comment",
        "z": "1e9e64cd1d94cdb3",
        "name": "Control conversion using options property",
        "info": "XML node can control conversion by setting `options` property (defined by [xml2js](https://github.com/Leonidas-from-XIV/node-xml2js/blob/master/README.md#options)) in input message.",
        "x": 200,
        "y": 260,
        "wires": []
    },
    {
        "id": "b74237dc.1e5028",
        "type": "debug",
        "z": "1e9e64cd1d94cdb3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "f04ffb9a.68edb8",
        "type": "template",
        "z": "1e9e64cd1d94cdb3",
        "name": "XML string",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fruit id=\"100\">\n    <kind>Apple</kind>\n    <price>100</price>\n    <origin>Canada</origin>\n</fruit>",
        "output": "str",
        "x": 310,
        "y": 320,
        "wires": [
            [
                "fedf79.5889c088"
            ]
        ]
    },
    {
        "id": "fedf79.5889c088",
        "type": "change",
        "z": "1e9e64cd1d94cdb3",
        "name": "set options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "{\"explicitArray\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "581bd648.636628"
            ]
        ]
    },
    {
        "id": "5038a770713f00eb",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Create an HTTP Endpoint",
        "info": "The `HTTP In` and `HTTP Response` pair of nodes are the starting point for all HTTP endpoints you create.\n\nAny flow that starts with an `HTTP In` node must have a path to an `HTTP Response` node otherwise requests will eventually timeout.\n\nThe `HTTP Response` node uses the `payload` property of messages it receives as the body of the response. Other properties can be used to further customize the response - they are covered in other recipes.\n\nThe `Template` node provides a convenient way to embed a body of content into a flow. It may be desirable to maintain such static content outside of the flow.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/create-an-http-endpoint) for details.",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "a845d3aba373dce0",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "1c2bbc6e32f01407"
            ]
        ]
    },
    {
        "id": "e71f2015a826e2d3",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "5e867553f2f8f4cb",
        "type": "http request",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/hello",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "f0fa7eba13587d76"
            ]
        ]
    },
    {
        "id": "cb92726825e7b80e",
        "type": "inject",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "5e867553f2f8f4cb"
            ]
        ]
    },
    {
        "id": "f0fa7eba13587d76",
        "type": "debug",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 220,
        "wires": []
    },
    {
        "id": "c74cb98c89f7e548",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Send HTTP request: http://localhost:1880/hello",
        "info": "`http request` node can be used to make an **HTTP GET** request.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/simple-get-request) for details.",
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "1c2bbc6e32f01407",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello World!</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "e71f2015a826e2d3"
            ]
        ]
    },
    {
        "id": "885a3a43ac78a656",
        "type": "http request",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "8dcbbe70879443cc"
            ]
        ]
    },
    {
        "id": "78a8e2a7e625b234",
        "type": "inject",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "url",
                "v": "http://localhost:1880/hello",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "885a3a43ac78a656"
            ]
        ]
    },
    {
        "id": "8dcbbe70879443cc",
        "type": "debug",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 300,
        "wires": []
    },
    {
        "id": "c2597e26b5c768d2",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Set URL in HTTP request node setting panel",
        "info": "`http request` node can be used to make an **HTTP GET** request.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/simple-get-request) for details.",
        "x": 430,
        "y": 180,
        "wires": []
    },
    {
        "id": "bc627b94e952d863",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Set URL via url property of input message of HTTP request node",
        "info": "Target URL of `http request` node can be specified via `url` property of input message.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/set-request-url) for details.",
        "x": 490,
        "y": 260,
        "wires": []
    },
    {
        "id": "ac0b58f6.c85138",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-query",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 420,
        "wires": [
            [
                "d9c345c7.c2e148"
            ]
        ]
    },
    {
        "id": "c110b7f7.22f238",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 420,
        "wires": []
    },
    {
        "id": "976b2bb3.f5ff98",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Handle query parameters passed to an HTTP endpoint",
        "info": "The `HTTP in` node can accept query parameters passwd to an HTTP endpoint.  It use the `msg.req.query` property of the message sent by the HTTP In node to access the parameters.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/handle-query-parameters) for details.",
        "x": 280,
        "y": 380,
        "wires": []
    },
    {
        "id": "77a6b44f.4695ac",
        "type": "inject",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 520,
        "wires": [
            [
                "9094aba0.095678"
            ]
        ]
    },
    {
        "id": "f523b8e.b5c8c48",
        "type": "debug",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 520,
        "wires": []
    },
    {
        "id": "9a63c9c5.949128",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Send HTTP GET request: http://localhost:1880/hello-query?name=Nick",
        "info": "`http request` node can be used to send **HTTP GET** request.",
        "x": 330,
        "y": 480,
        "wires": []
    },
    {
        "id": "d9c345c7.c2e148",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello {{req.query.name}}!</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "c110b7f7.22f238"
            ]
        ]
    },
    {
        "id": "9094aba0.095678",
        "type": "http request",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/hello-query?name=Nick",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "f523b8e.b5c8c48"
            ]
        ]
    },
    {
        "id": "1ccc20e.71730df",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-headers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "3a62f641.2c0e8a"
            ]
        ]
    },
    {
        "id": "bc626348.1496d",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 640,
        "wires": []
    },
    {
        "id": "b13b7c19.79cbd",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Access HTTP request headers",
        "info": " `msg.req.headers` property of the message sent by the `HTTP In` node to access the headers.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/access-http-request-headers) for details.",
        "x": 200,
        "y": 600,
        "wires": []
    },
    {
        "id": "7fe0fee5.f3ed7",
        "type": "http request",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/hello-headers",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 350,
        "y": 740,
        "wires": [
            [
                "65b13d57.700074"
            ]
        ]
    },
    {
        "id": "65b13d57.700074",
        "type": "debug",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 740,
        "wires": []
    },
    {
        "id": "3a62f641.2c0e8a",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>User agent: {{req.headers.user-agent}}</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 390,
        "y": 640,
        "wires": [
            [
                "bc626348.1496d"
            ]
        ]
    },
    {
        "id": "757fe655.e28558",
        "type": "inject",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "headers",
                "v": "{\"User-Agent\":\"Node-RED\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 740,
        "wires": [
            [
                "7fe0fee5.f3ed7"
            ]
        ]
    },
    {
        "id": "5195095.03b4cf8",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Set HTTP request header & send HTTP GET request: http://localhost:1880/hello-headers",
        "info": "The field value pairs of the request headers \nyou would like to include in the message sent to the `HTTP request` node can be specified by setting `the msg.headers` field.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/set-request-header) for details.",
        "x": 390,
        "y": 700,
        "wires": []
    },
    {
        "id": "69a64e3d.84da3",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-raw",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 920,
        "y": 80,
        "wires": [
            [
                "38d357a7.b69d08"
            ]
        ]
    },
    {
        "id": "43e49c36.dc7624",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 80,
        "wires": []
    },
    {
        "id": "8cb4b74e.602c28",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Post data to a flow",
        "info": "The `HTTP In` node can listen for POST requests.  It returns the posted data as `msg.payload`.\n\nSee Node-RED cookbook items(\n[post raw data(https://cookbook.nodered.org/http/post-raw-data-to-a-flow), [post form data](https://cookbook.nodered.org/http/post-form-data-to-a-flow), [post JSON data](https://cookbook.nodered.org/http/post-json-data-to-a-flow)\n) for details.",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "ec661b6b.c3c2b8",
        "type": "http request",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/hello-raw",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "7c2812c.c6ee7ec"
            ]
        ]
    },
    {
        "id": "7c2812c.c6ee7ec",
        "type": "debug",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 180,
        "wires": []
    },
    {
        "id": "38d357a7.b69d08",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello {{payload}}</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 1070,
        "y": 80,
        "wires": [
            [
                "43e49c36.dc7624"
            ]
        ]
    },
    {
        "id": "e45041b6.9ec13",
        "type": "inject",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Nick",
        "payloadType": "str",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "ec661b6b.c3c2b8"
            ]
        ]
    },
    {
        "id": "af33dae7.b21138",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Send HTTP POST request: http://localhost:1880/hello-raw",
        "info": "",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "59760c9d.172d94",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-upload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 930,
        "y": 480,
        "wires": [
            [
                "e30073f3.ad429"
            ]
        ]
    },
    {
        "id": "d0b3e8b4.2cfde8",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Post file to a flow",
        "info": "The `HTTP In` node can listen for POST requests for file upload.  Information for uploaded files can be accessed from `msg.req.files`.\n",
        "x": 860,
        "y": 260,
        "wires": []
    },
    {
        "id": "a888a043.ebb72",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-upload",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 930,
        "y": 380,
        "wires": [
            [
                "14b950b.0ed5aaf"
            ]
        ]
    },
    {
        "id": "2ccb67c7.02c568",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 380,
        "wires": []
    },
    {
        "id": "14b950b.0ed5aaf",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <form method=\"POST\" enctype=\"multipart/form-data\">\n            <div>\n                <label for=\"file\">Select file to upload:</label>\n                <input type=\"file\" id=\"file\" name=\"file\"/>\n            </div>\n            <div>\n                <button type=\"submit\">OK</button>\n            </div>\n        </form>\n    </body>\n</html>",
        "output": "str",
        "x": 1100,
        "y": 380,
        "wires": [
            [
                "2ccb67c7.02c568"
            ]
        ]
    },
    {
        "id": "54f2edb5.62fca4",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 480,
        "wires": []
    },
    {
        "id": "e30073f3.ad429",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello {{req.files.0.originalname}}</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "54f2edb5.62fca4"
            ]
        ]
    },
    {
        "id": "6c3c1bf.48cc2e4",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Create HTTP page for file upload: open http://localhost:1880/hello-upload \\n from Web browser.  Then upload a file.",
        "info": "",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "c6242caa.8ec63",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Serve POST request for file upload",
        "info": "",
        "x": 980,
        "y": 440,
        "wires": []
    },
    {
        "id": "c362b989.954ae8",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-cookie",
        "method": "get",
        "swaggerDoc": "",
        "x": 890,
        "y": 640,
        "wires": [
            [
                "21ddf71f.d00518"
            ]
        ]
    },
    {
        "id": "21ddf71f.d00518",
        "type": "function",
        "z": "7ef921d8a99e40a2",
        "name": "Format cookies",
        "func": "msg.payload = JSON.stringify(msg.req.cookies,null,4);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 640,
        "wires": [
            [
                "f3aa98c1.befc18"
            ]
        ]
    },
    {
        "id": "f3aa98c1.befc18",
        "type": "template",
        "z": "7ef921d8a99e40a2",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Cookies</h1>\n        <a href=\"hello-cookie/add\">Add a cookie</a><br/>\n        <a href=\"hello-cookie/clear\">Clear cookies</a><br/>\n        <pre>{{ payload }}</pre>\n    </body>\n</html>",
        "output": "str",
        "x": 1290,
        "y": 640,
        "wires": [
            [
                "f52e2880.180968"
            ]
        ]
    },
    {
        "id": "f52e2880.180968",
        "type": "http response",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1510,
        "y": 640,
        "wires": []
    },
    {
        "id": "9a2a9a4.0fc0768",
        "type": "change",
        "z": "7ef921d8a99e40a2",
        "name": "Redirect to /hello-cookie",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "302",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.location",
                "pt": "msg",
                "to": "/hello-cookie",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 700,
        "wires": [
            [
                "f52e2880.180968"
            ]
        ]
    },
    {
        "id": "afefb90.53dcf48",
        "type": "function",
        "z": "7ef921d8a99e40a2",
        "name": "Add a cookie",
        "func": "msg.cookies = { };\nmsg.cookies[\"demo-\"+(Math.floor(Math.random()*1000))] = Date.now();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "9a2a9a4.0fc0768"
            ]
        ]
    },
    {
        "id": "d5205a2c.db9018",
        "type": "function",
        "z": "7ef921d8a99e40a2",
        "name": "Clear cookies",
        "func": "// Find demo cookies and clear them\nvar cookieNames = Object.keys(msg.req.cookies).filter(function(cookieName) { return /^demo-/.test(cookieName);});\nmsg.cookies = {};\n\ncookieNames.forEach(function(cookieName) {\n    msg.cookies[cookieName] = null;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 720,
        "wires": [
            [
                "9a2a9a4.0fc0768"
            ]
        ]
    },
    {
        "id": "fda60c66.04975",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-cookie/add",
        "method": "get",
        "swaggerDoc": "",
        "x": 900,
        "y": 680,
        "wires": [
            [
                "afefb90.53dcf48"
            ]
        ]
    },
    {
        "id": "35285a76.1f8636",
        "type": "http in",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "url": "/hello-cookie/clear",
        "method": "get",
        "swaggerDoc": "",
        "x": 900,
        "y": 720,
        "wires": [
            [
                "d5205a2c.db9018"
            ]
        ]
    },
    {
        "id": "cb094c2f.7e34d",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Working with cookies",
        "info": "The messages sent by the `HTTP In` node include the `msg.req.cookies` property that lists the cookies set on the current request.\n\nThe `HTTP Response` node will use the `msg.cookies` property in order to set or clear cookies.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/work-with-cookies) for details.\n",
        "x": 860,
        "y": 540,
        "wires": []
    },
    {
        "id": "287a9146.683afe",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Create HTTP page for testing cookies: open http://localhost:1880/hello-cookie from Web browser. ",
        "info": "",
        "x": 1140,
        "y": 600,
        "wires": []
    },
    {
        "id": "14c60a10.794df6",
        "type": "http request",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "https://jsonplaceholder.typicode.com/posts/{{post}}",
        "tls": "",
        "x": 450,
        "y": 860,
        "wires": [
            [
                "b4ea8dd4.61a05"
            ]
        ]
    },
    {
        "id": "b4ea8dd4.61a05",
        "type": "debug",
        "z": "7ef921d8a99e40a2",
        "name": "Get a parsed JSON Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.title",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 860,
        "wires": []
    },
    {
        "id": "3479192a.04f016",
        "type": "inject",
        "z": "7ef921d8a99e40a2",
        "name": "post id",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "2",
        "payloadType": "str",
        "x": 150,
        "y": 860,
        "wires": [
            [
                "e69250cf.368fd"
            ]
        ]
    },
    {
        "id": "e69250cf.368fd",
        "type": "change",
        "z": "7ef921d8a99e40a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 860,
        "wires": [
            [
                "14c60a10.794df6"
            ]
        ]
    },
    {
        "id": "a620376165b5d0b9",
        "type": "comment",
        "z": "7ef921d8a99e40a2",
        "name": "Get a parsed JSON Response",
        "info": "The field value pairs of the request headers \nyou would like to include in the message sent to the `HTTP request` node can be specified by setting `the msg.headers` field.\n\nSee Node-RED cookbook [item](https://cookbook.nodered.org/http/set-request-header) for details.",
        "x": 200,
        "y": 800,
        "wires": []
    },
    {
        "id": "6825dd23.d4ee44",
        "type": "debug",
        "z": "ad5189c2e56f025f",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1100,
        "wires": []
    },
    {
        "id": "98201759.e4d558",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "Create query in topic",
        "func": "var out = \"INSERT INTO **your_table_name_here** (timestamp,topic,data)\"\nout = out + \"VALUES ('\" + new Date().toISOString() + \"','\" \nout = out + msg.topic + \"','\" + msg.payload + \"');\"\n    \nmsg.topic=out;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1200,
        "wires": [
            [
                "6825dd23.d4ee44"
            ]
        ]
    },
    {
        "id": "be41a506.f7f9f8",
        "type": "comment",
        "z": "ad5189c2e56f025f",
        "name": "Log everything",
        "info": "",
        "x": 140,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4265dd53.5b18a4",
        "type": "debug",
        "z": "ad5189c2e56f025f",
        "name": "db connection",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3fe91d18a1ef634d",
        "type": "Stackhero-MySQL",
        "z": "ad5189c2e56f025f",
        "server": "aaafb917b4a7c922",
        "name": "",
        "x": 490,
        "y": 1580,
        "wires": [
            [
                "4265dd53.5b18a4"
            ]
        ]
    },
    {
        "id": "bb97337d77251244",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "Create query in topic",
        "func": "var out = \"INSERT INTO cats (name,owner, birth) \"\nvar out = ''\nout = out + \"VALUES ('\" + new Date().toISOString() + \"','\" \nout = out + msg.topic + \"','\" + msg.payload + \"');\"\n    \nmsg.topic=out;\n\nreturn msg;o",
        "outputs": 1,
        "timeout": "",
        "noerr": 2,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "2d1b8b61c936d886",
        "type": "template",
        "z": "ad5189c2e56f025f",
        "name": "MYSql Insert",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "msg.topic = \"SELECT * FROM cats;\nreturn msg;",
        "output": "str",
        "x": 290,
        "y": 1420,
        "wires": [
            [
                "4265dd53.5b18a4"
            ]
        ]
    },
    {
        "id": "c421700c56df3db7",
        "type": "ping",
        "z": "ad5189c2e56f025f",
        "d": true,
        "protocol": "Automatic",
        "mode": "timed",
        "name": "PingDocker MySQL",
        "host": "192.168.0.55",
        "timer": "1",
        "inputs": 0,
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "d07fae221f140fd5"
            ]
        ]
    },
    {
        "id": "8a8f83dae1ba6258",
        "type": "tcp-ping",
        "z": "ad5189c2e56f025f",
        "d": true,
        "ip": "192.168.0.55",
        "port": "3306",
        "count": "1",
        "interval": "1",
        "timeout": "1",
        "topic": "",
        "name": "",
        "x": 540,
        "y": 1240,
        "wires": [
            [
                "d07fae221f140fd5"
            ]
        ]
    },
    {
        "id": "d07fae221f140fd5",
        "type": "debug",
        "z": "ad5189c2e56f025f",
        "name": "Ping connector",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1260,
        "wires": []
    },
    {
        "id": "2c50b5fd9a447ed3",
        "type": "mysql2",
        "z": "ad5189c2e56f025f",
        "d": true,
        "name": "",
        "server": "694b9bbbe1f566c9",
        "bind": true,
        "topic": "",
        "x": 320,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "13d0f7c2a38ec8e1",
        "type": "mysql",
        "z": "ad5189c2e56f025f",
        "d": true,
        "mydb": "",
        "name": "",
        "x": 310,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "2e96f729c5391863",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 70,
        "y": 1480,
        "wires": [
            [
                "273264c349dbec98"
            ]
        ]
    },
    {
        "id": "f3960b668764e737",
        "type": "ping",
        "z": "ad5189c2e56f025f",
        "d": true,
        "protocol": "Automatic",
        "mode": "timed",
        "name": "PingDocker MySQL",
        "host": "192.168.0.55",
        "timer": "1",
        "inputs": 0,
        "x": 550,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "273264c349dbec98",
        "type": "MSSQL",
        "z": "ad5189c2e56f025f",
        "mssqlCN": "3a2a3be.e1920c4",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 320,
        "y": 1520,
        "wires": [
            [
                "4265dd53.5b18a4"
            ]
        ]
    },
    {
        "id": "f197a5b6f3c0bf20",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "fc2035793cebd21a"
            ]
        ]
    },
    {
        "id": "fc2035793cebd21a",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "INSERT Data",
        "func": "msg.topic = \"INSERT INTO ?? (??) VALUES (?)\";\nmsg.payload = [\"Department\",\"Department_name\",\"test\"];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 80,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "4a03ab6485086f44",
        "type": "debug",
        "z": "ad5189c2e56f025f",
        "name": "MySQL Function tester",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 100,
        "wires": []
    },
    {
        "id": "033cab0aed26b321",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 138,
        "y": 132,
        "wires": [
            [
                "3125addf6840b593"
            ]
        ]
    },
    {
        "id": "3125addf6840b593",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "Update Data",
        "func": "msg.topic = \"Update Department Set Department_name = ? where Department_id=?\";\nmsg.payload=['Logistics Managers','3']\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 317,
        "y": 136,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "846541bce7af3f26",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Good 2 Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "warehouse",
        "payloadType": "str",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "dca22e5dafec660f"
            ]
        ]
    },
    {
        "id": "dca22e5dafec660f",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "SELECT Data",
        "func": "//msg.topic = \"SELECT * FROM department WHERE department_name LIKE '%\" + msg.payload + \"%'\";\nmsg.topic = \"SELECT * FROM test \";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "d987b5ae95b3587c",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "INSERT Bind - via JSON",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "INSERT INTO test (id,text) VALUES (?, ?)",
        "payload": "[4, \"This is a funny world's end\"]",
        "payloadType": "str",
        "x": 159,
        "y": 197,
        "wires": [
            [
                "b95831e77d6e550a"
            ]
        ]
    },
    {
        "id": "b95831e77d6e550a",
        "type": "json",
        "z": "ad5189c2e56f025f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 359,
        "y": 197,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "b735c620224fa81b",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go \"Warehouse\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "%Warehouse%",
        "payloadType": "str",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "6f2e8b9b2fc4add3"
            ]
        ]
    },
    {
        "id": "6f2e8b9b2fc4add3",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "SELECT Data",
        "func": "msg.topic = \"SELECT * FROM Department WHERE Department_Name LIKE ?\";\nmsg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "4a28e4cdce088289",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go \"MAnagers\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "%Managers%",
        "payloadType": "str",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "6f2e8b9b2fc4add3"
            ]
        ]
    },
    {
        "id": "81400c30c8bac5ac",
        "type": "mysql",
        "z": "ad5189c2e56f025f",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "4a03ab6485086f44"
            ]
        ]
    },
    {
        "id": "ffe004d6161583f4",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "Delete Bind",
        "func": "msg.topic = \"Delete From department where Department_id = ?\";\nmsg.payload = [ \"6\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "b7b0e08b2d4eae31",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "ffe004d6161583f4"
            ]
        ]
    },
    {
        "id": "723bc4c98afdbb4d",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "INSERT Data",
        "func": "msg.topic = \"INSERT INTO department (department_name) VALUES (?)\";\nmsg.payload = [ \"test\"];\nreturn msg;\n\nmsg.topic = \"INSERT INTO ?? (??) VALUES (?)\";\nmsg.payload = [\"Department\",\"Department_name\",\"test\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 20,
        "wires": [
            [
                "81400c30c8bac5ac"
            ]
        ]
    },
    {
        "id": "d2acf243e6ea07fc",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 20,
        "wires": [
            [
                "723bc4c98afdbb4d"
            ]
        ]
    },
    {
        "id": "d9a065f4595222c7",
        "type": "mysql",
        "z": "ad5189c2e56f025f",
        "mydb": "6cf82e37.9a1db",
        "name": "",
        "x": 590,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4af224cd538f85fe",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 590,
        "y": 340,
        "wires": [
            [
                "a75e231ac267e1ab"
            ]
        ]
    },
    {
        "id": "a75e231ac267e1ab",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "INSERT Data",
        "func": "msg.topic = \"INSERT INTO ?? (??) VALUES (?)\";\nmsg.payload = [\"Department\",\"Department_name\",\"test\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 340,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "446a672697b3abe9",
        "type": "debug",
        "z": "ad5189c2e56f025f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1191,
        "y": 472,
        "wires": []
    },
    {
        "id": "b15e7b2eefb80a95",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 588,
        "y": 392,
        "wires": [
            [
                "abc3c41cffca3f14"
            ]
        ]
    },
    {
        "id": "abc3c41cffca3f14",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "Update Data",
        "func": "msg.topic = \"Update Department Set Department_name = ? where Department_id=?\";\nmsg.payload=['Logistics Managers','3']\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 767,
        "y": 396,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "79049c61386c0597",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "warehouse",
        "payloadType": "str",
        "x": 590,
        "y": 560,
        "wires": [
            [
                "e60119a2f6ca3542"
            ]
        ]
    },
    {
        "id": "e60119a2f6ca3542",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "SELECT Data",
        "func": "msg.topic = \"SELECT * FROM department WHERE department_name LIKE '%\" + msg.payload + \"%'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 560,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "58e6d839d9cda7e8",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "INSERT Bind - via JSON",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "INSERT INTO test (id,text) VALUES (?, ?)",
        "payload": "[4, \"This is a funny world's end\"]",
        "payloadType": "str",
        "x": 609,
        "y": 457,
        "wires": [
            [
                "bd3b9893258e6c48"
            ]
        ]
    },
    {
        "id": "bd3b9893258e6c48",
        "type": "json",
        "z": "ad5189c2e56f025f",
        "name": "",
        "x": 809,
        "y": 457,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "2c798c503b004831",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go \"Warehouse\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "%Warehouse%",
        "payloadType": "str",
        "x": 600,
        "y": 620,
        "wires": [
            [
                "357a3d2610e3300d"
            ]
        ]
    },
    {
        "id": "357a3d2610e3300d",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "SELECT Data",
        "func": "msg.topic = \"SELECT * FROM Department WHERE Department_Name LIKE ?\";\nmsg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 640,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "fa6135b4ab647547",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go \"MAnagers\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "%Managers%",
        "payloadType": "str",
        "x": 600,
        "y": 660,
        "wires": [
            [
                "357a3d2610e3300d"
            ]
        ]
    },
    {
        "id": "24b37d3ffbb471bd",
        "type": "mysql",
        "z": "ad5189c2e56f025f",
        "mydb": "6cf82e37.9a1db",
        "name": "",
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "446a672697b3abe9"
            ]
        ]
    },
    {
        "id": "edfa555da7c4b43b",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "Delete Bind",
        "func": "msg.topic = \"Delete From department where Department_id = ?\";\nmsg.payload = [ \"6\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 500,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "c50c8277646a0cd7",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "edfa555da7c4b43b"
            ]
        ]
    },
    {
        "id": "8f5f789dac7f4a12",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "INSERT Data",
        "func": "msg.topic = \"INSERT INTO department (department_name) VALUES (?)\";\nmsg.payload = [ \"test\"];\nreturn msg;\n\nmsg.topic = \"INSERT INTO ?? (??) VALUES (?)\";\nmsg.payload = [\"Department\",\"Department_name\",\"test\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 280,
        "wires": [
            [
                "24b37d3ffbb471bd"
            ]
        ]
    },
    {
        "id": "ed7487f1fcd3b79a",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 590,
        "y": 280,
        "wires": [
            [
                "8f5f789dac7f4a12"
            ]
        ]
    },
    {
        "id": "ed36715e97e2c811",
        "type": "inject",
        "z": "ad5189c2e56f025f",
        "name": "Create table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "1a11c3ef9ab67d5a"
            ]
        ]
    },
    {
        "id": "1a11c3ef9ab67d5a",
        "type": "function",
        "z": "ad5189c2e56f025f",
        "name": "function 1",
        "func": "msg.topic = \"CREATE TABLE iot_factory ( id SERIAL PRIMARY KEY, device_id VARCHAR(50) NOT NULL,timestamp TIMESTAMP NOT NULL,temperature FLOAT,humidity FLOAT,pressure FLOAT,status VARCHAR(20));\";            \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 160,
        "wires": [
            [
                "0e37b681fd27f7a8"
            ]
        ]
    },
    {
        "id": "0e37b681fd27f7a8",
        "type": "mysql",
        "z": "ad5189c2e56f025f",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 850,
        "y": 220,
        "wires": [
            [
                "55aba1c8227aec6d"
            ]
        ]
    },
    {
        "id": "55aba1c8227aec6d",
        "type": "debug",
        "z": "ad5189c2e56f025f",
        "name": "Create table",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 180,
        "wires": []
    },
    {
        "id": "312ccc98.d0a11c",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "Go",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "b26654b2.7ff938"
            ]
        ]
    },
    {
        "id": "b26654b2.7ff938",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "INSERT Bind",
        "func": "msg.topic = \"INSERT INTO test (id,text) VALUES (?,?)\";\nmsg.payload = [2, \"This is a funny world's end\"];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 345,
        "y": 61,
        "wires": [
            []
        ]
    },
    {
        "id": "89a9eba3.64b928",
        "type": "debug",
        "z": "d5ae85732ef2ad69",
        "name": "MySQL select from test",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "6e7208e4.98b938",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "Go",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "c5490fc7.128e"
            ]
        ]
    },
    {
        "id": "c5490fc7.128e",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "INSERT Old",
        "func": "//msg.topic = \"INSERT INTO test (id,text) VALUES (3,'Directly in topic')\";\nmsg.topic = \"INSERT INTO test (name,owner, birth) VALUES ('Flipppy', 'Ray',null)\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "7ca85d679ba944bd"
            ]
        ]
    },
    {
        "id": "fb4218c4.10be88",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "Go",
        "props": [
            {
                "p": "payload",
                "v": "funny",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "funny",
        "payloadType": "string",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "7f314efa.5fe1c8"
            ]
        ]
    },
    {
        "id": "7f314efa.5fe1c8",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "SELECT test",
        "func": "msg.topic = \"SELECT * FROM test\" ;\n\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "ee5b96649f26b143"
            ]
        ]
    },
    {
        "id": "b8421f3f.610ff",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "INSERT Bind - via JSON",
        "props": [
            {
                "p": "payload",
                "v": "[4, \"This is a funny world's end\"]",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "INSERT INTO test (id,text) VALUES (?, ?)",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "INSERT INTO test (id,text) VALUES (?, ?)",
        "payload": "[4, \"This is a funny world's end\"]",
        "payloadType": "string",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "40ffd23a.bd34ac"
            ]
        ]
    },
    {
        "id": "40ffd23a.bd34ac",
        "type": "json",
        "z": "d5ae85732ef2ad69",
        "name": "",
        "x": 410,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b636f13a.eb07",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "Go \"funny\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "%funny%",
        "payloadType": "string",
        "x": 201,
        "y": 183,
        "wires": [
            [
                "ed1867.f2eb1f98"
            ]
        ]
    },
    {
        "id": "ed1867.f2eb1f98",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "SELECT Bind",
        "func": "msg.topic = \"SELECT * FROM test WHERE text LIKE ?\";\nmsg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2f56074a.2be34",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "Go \"world's\"",
        "props": [
            {
                "p": "payload",
                "v": "%world's%",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "%world's%",
        "payloadType": "string",
        "x": 211,
        "y": 243,
        "wires": [
            [
                "ed1867.f2eb1f98"
            ]
        ]
    },
    {
        "id": "ee5b96649f26b143",
        "type": "mysql",
        "z": "d5ae85732ef2ad69",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 590,
        "y": 360,
        "wires": [
            [
                "89a9eba3.64b928"
            ]
        ]
    },
    {
        "id": "334e8950e71521af",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "10",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "535b59796cf24f58"
            ]
        ]
    },
    {
        "id": "698b5c59fce3896e",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "20",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "20",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "535b59796cf24f58"
            ]
        ]
    },
    {
        "id": "6d335a55cabb963c",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "100",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "100",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "535b59796cf24f58"
            ]
        ]
    },
    {
        "id": "535b59796cf24f58",
        "type": "mysql",
        "z": "d5ae85732ef2ad69",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "096c7eeec4a33cef"
            ]
        ]
    },
    {
        "id": "096c7eeec4a33cef",
        "type": "debug",
        "z": "d5ae85732ef2ad69",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 630,
        "y": 620,
        "wires": []
    },
    {
        "id": "6be45fbb5e2dd0bb",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "SELECT test",
        "func": "msg.topic = \"SELECT * FROM test\" + msg.payload + \"%'\";\nreturn msg; ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "dcf1e1106b2e2364",
        "type": "inject",
        "z": "d5ae85732ef2ad69",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "a18407584720f69d",
                "3bc545635e998468"
            ]
        ]
    },
    {
        "id": "a18407584720f69d",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "INSERT Bind",
        "func": "//msg.topic = \"INSERT INTO test (id,text) VALUES (?,?)\";\nmsg.topic = \"INSERT INTO test(NAME, OWNER)  VALUES('MOE3', 'CURLY3')\";\nmsg.payload = [2, \"This is a funny world's end\"];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 365,
        "y": 481,
        "wires": [
            [
                "9f21d213d2e9aa3a"
            ]
        ]
    },
    {
        "id": "9f21d213d2e9aa3a",
        "type": "debug",
        "z": "d5ae85732ef2ad69",
        "name": "MySQL insert",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 500,
        "wires": []
    },
    {
        "id": "3bc545635e998468",
        "type": "function",
        "z": "d5ae85732ef2ad69",
        "name": "INSERT Bind",
        "func": "msg.topic = \"INSERT INTO test(NAME, OWNER)  VALUES('MOE3', 'CURLY3')\";\nmsg.payload = [2, \"This is a funny world's end\"];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            [
                "9f21d213d2e9aa3a"
            ]
        ]
    },
    {
        "id": "7ca85d679ba944bd",
        "type": "debug",
        "z": "d5ae85732ef2ad69",
        "name": "MySQL insert test Table",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 440,
        "wires": []
    },
    {
        "id": "56a52b9f.21a9a4",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "94105126.99ec6",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 128,
        "wires": [
            [
                "51a38772.08cc28"
            ]
        ]
    },
    {
        "id": "36af1de7.02a372",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "John Smith",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Facility_Source\":\"facsource\",\"FirstName\":\"Elmer\",\"MiddleName\":null,\"LastName\":\"Fudd\",\"Gender\":\"male\",\"BirthDate\":\"1980/03/23\",\"address\":\"123 sessame street\",\"city\":\"cityland\",\"state\":\"stateland\",\"postalCode\":\"ss123abc\",\"FHIR_Document\":\"FHIR_Document FHIR_Document FHIR_Document FHIR_Document FHIR_Document FHIR_Document FHIR_Document FHIR_Document\",\"UpdatedBy\":\"admin\"}",
        "payloadType": "json",
        "x": 140,
        "y": 192,
        "wires": [
            [
                "7a204db1.c47ff4"
            ]
        ]
    },
    {
        "id": "e155c55b.d410d8",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "c61784ba.fe6c18",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "Jane Doe",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Facility_Source\":\"facsource\",\"FirstName\":\"Exene\",\"MiddleName\":\"Cervanka\",\"LastName\":\"Doe\",\"Gender\":\"female\",\"BirthDate\":\"1981/06/30\",\"address\":\"125 sessame street\",\"city\":\"cityland\",\"state\":\"stateland\",\"postalCode\":\"ss123abc\",\"FHIR_Document\":\"Document Document Document Document Document Document Document Document\",\"UpdatedBy\":\"admin\"}",
        "payloadType": "json",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "7a204db1.c47ff4"
            ]
        ]
    },
    {
        "id": "8ea7bc6.c32244",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 310,
        "y": 300,
        "wires": [
            [
                "2c1b8c17.87a134"
            ]
        ]
    },
    {
        "id": "7b7f58bf.a1fac8",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "72f5a01f.b82ba",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "male",
        "payloadType": "str",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "312175e2.9453fa"
            ]
        ]
    },
    {
        "id": "604f68c.9a00298",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "Azure Sql",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 420,
        "wires": []
    },
    {
        "id": "12b5804c.0d7be",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "female",
        "payloadType": "str",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "312175e2.9453fa"
            ]
        ]
    },
    {
        "id": "7383e56a.dd107c",
        "type": "comment",
        "z": "78f5f0c0.cb094",
        "name": "EBRS FHIR Repository @mss",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "95a7322d.ba253",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 40,
        "wires": [
            [
                "cdeb788b.ca12e8"
            ]
        ]
    },
    {
        "id": "cdeb788b.ca12e8",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "77918fb2.5d77b",
        "type": "comment",
        "z": "78f5f0c0.cb094",
        "name": "EBRS FHIR Repository - Search ",
        "info": "",
        "x": 170,
        "y": 500,
        "wires": []
    },
    {
        "id": "424858c5.69c728",
        "type": "function",
        "z": "78f5f0c0.cb094",
        "name": "Request Router",
        "func": "if (msg.payload === \"Cerner\") {\n   return [ msg,null,null,null];\n} \nif (msg.payload === \"EPIC\") {\n   return [ null,msg,null,null];\n}\nif (msg.payload === \"Nextgen\") {\n   return [ null,null,msg,null];\n} \nif (msg.payload === \"Meditech\") {\n   return [ null,null,null,msg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 600,
        "wires": [
            [
                "3a268d6e.97a602"
            ],
            [
                "db5b7e7a.5642f"
            ],
            [
                "8d6962d8.9c592"
            ],
            [
                "20f77784.5c48b8"
            ]
        ]
    },
    {
        "id": "97bb4c89.078bd",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "EPIC  ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EPIC",
        "payloadType": "str",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "424858c5.69c728"
            ]
        ]
    },
    {
        "id": "ef98ee94.95536",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "Nextgen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Nextgen",
        "payloadType": "str",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "424858c5.69c728"
            ]
        ]
    },
    {
        "id": "92961bd5.d875a8",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "Cerner",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Cerner",
        "payloadType": "str",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "424858c5.69c728"
            ]
        ]
    },
    {
        "id": "3a268d6e.97a602",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "Cerner",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 560,
        "wires": []
    },
    {
        "id": "db5b7e7a.5642f",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "EPIC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 600,
        "wires": []
    },
    {
        "id": "8d6962d8.9c592",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "Nextgen",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "1e517d6a.5e10c3",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "Meditech",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Meditech",
        "payloadType": "str",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "424858c5.69c728"
            ]
        ]
    },
    {
        "id": "20f77784.5c48b8",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "Meditech",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 680,
        "wires": []
    },
    {
        "id": "b9dd764c.989198",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "input data - [\"my\",\"data\",\"array\"]",
        "props": [
            {
                "p": "payload",
                "v": "{}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 170,
        "y": 780,
        "wires": [
            [
                "607f0c90.622b54"
            ]
        ]
    },
    {
        "id": "607f0c90.622b54",
        "type": "split",
        "z": "78f5f0c0.cb094",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 780,
        "wires": [
            [
                "184fd784.c33338",
                "9e433c10.ab03"
            ]
        ]
    },
    {
        "id": "184fd784.c33338",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "9bf58dc7.eee01",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 650,
        "y": 840,
        "wires": []
    },
    {
        "id": "1e5198c0.9be4d7",
        "type": "comment",
        "z": "78f5f0c0.cb094",
        "name": "EBRS Build Payload array from Sql Server table",
        "info": "",
        "x": 200,
        "y": 720,
        "wires": []
    },
    {
        "id": "1452c03b.cf901",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 940,
        "wires": [
            [
                "6e95e7fc.fd21b8"
            ]
        ]
    },
    {
        "id": "cef7681e.9e5a68",
        "type": "comment",
        "z": "78f5f0c0.cb094",
        "name": "EBRS Medical record number to lookup @mss",
        "info": "",
        "x": 210,
        "y": 900,
        "wires": []
    },
    {
        "id": "ab0827b4.982d68",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 89,
        "y": 1000,
        "wires": [
            [
                "db4e8f.bc55a17"
            ]
        ]
    },
    {
        "id": "d78b56c1.e5f748",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "EPIC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Medical_Record_Number\":\"1286967\",\"Found\":\"False\",\"LastUpdated\":\"2021-03-26\",\"UpdatedBy\":\"Admin\"}",
        "payloadType": "json",
        "x": 90,
        "y": 1060,
        "wires": [
            [
                "f7917688.638238"
            ]
        ]
    },
    {
        "id": "6437f056.0e0ce",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "CERNER",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Facility_Source\":\"facsource\",\"FirstName\":\"Jane\",\"MiddleName\":\"Joice\",\"LastName\":\"Doe\",\"Gender\":\"female\",\"BirthDate\":\"1981/06/30\",\"address\":\"125 sessame street\",\"city\":\"cityland\",\"state\":\"stateland\",\"postalCode\":\"ss123abc\",\"FHIR_Document\":\"Document Document Document Document Document Document Document Document\",\"UpdatedBy\":\"admin\"}",
        "payloadType": "json",
        "x": 100,
        "y": 1108,
        "wires": [
            [
                "f7917688.638238"
            ]
        ]
    },
    {
        "id": "cd48c6be.0eca48",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1087,
        "wires": []
    },
    {
        "id": "e726e55e.94d8f8",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "input data - [\"my\",\"data\",\"array\"]",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "c1a8391d.f9a498"
            ]
        ]
    },
    {
        "id": "c1a8391d.f9a498",
        "type": "split",
        "z": "78f5f0c0.cb094",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 1200,
        "wires": [
            [
                "7b235cbb.e003b4",
                "a8535dae.df603"
            ]
        ]
    },
    {
        "id": "7b235cbb.e003b4",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 430,
        "y": 1260,
        "wires": []
    },
    {
        "id": "499719e6.eeab18",
        "type": "debug",
        "z": "78f5f0c0.cb094",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e9896e8e.fcb44",
        "type": "comment",
        "z": "78f5f0c0.cb094",
        "name": "https://discourse.nodered.org/t/how-to-access-msg-payload-array-in-mssql/27362/6",
        "info": "",
        "x": 310,
        "y": 1160,
        "wires": []
    },
    {
        "id": "bfabefa1.0291b",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "d": true,
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "create table Repository",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "\r\n\r\n\r\n/****** Object: Table [dbo].[Repository] Script Date: 3/22/2021 9:47:21 PM ******/\r\nSET ANSI_NULLS ON;\r\n\r\n\r\nSET QUOTED_IDENTIFIER ON;\r\n\r\n\r\nCREATE TABLE [dbo].[Repository](\r\n[FHIR_Repo_ID] [int] IDENTITY(1,1) NOT NULL,\r\n[Facility_Source] [varchar](50) NULL,\r\n[FirstName] [varchar](50) NULL,\r\n[MiddleName] [varchar](50) NULL,\r\n[LastName] [varchar](50) NULL,\r\n[Gender] [varchar](6) NULL,\r\n[BirthDate] [varchar](50) NULL,\r\n[address] [varchar](50) NULL,\r\n[city] [varchar](25) NULL,\r\n[state] [varchar](50) NULL,\r\n[postalCode] [varchar](10) NULL,\r\n[FHIR_Document] [varchar](max) NULL,\r\n[LastUpdated] [datetime] NULL,\r\n[UpdatedBy] [varchar](50) NULL,\r\n[rowguid] [uniqueidentifier] ROWGUIDCOL NOT NULL,\r\n[LoadedDateTime] [datetime] NULL,\r\nPRIMARY KEY CLUSTERED\r\n(\r\n[FHIR_Repo_ID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\n\r\n\r\nALTER TABLE [dbo].[Repository] ADD DEFAULT (getdate()) FOR [LastUpdated];\r\n\r\n\r\nALTER TABLE [dbo].[Repository] ADD CONSTRAINT [DF_Master_FHIR_Repos_CHILD_rowguid] DEFAULT (newid()) FOR [rowguid];\r\n\r\n\r\nALTER TABLE [dbo].[Repository] ADD DEFAULT (getdate()) FOR [LoadedDateTime];\r\n",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 390,
        "y": 80,
        "wires": [
            [
                "cdeb788b.ca12e8"
            ]
        ]
    },
    {
        "id": "51a38772.08cc28",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "drop table Repository",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "\r\ndrop TABLE [dbo].[Repository]",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "parseMustache": true,
        "params": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "cdeb788b.ca12e8"
            ]
        ]
    },
    {
        "id": "7a204db1.c47ff4",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "insert into table Repository",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": 1,
        "query": "insert into Repository\r\n(\r\n    Facility_Source,\r\n    FirstName,\r\n    MiddleName,\r\n    LastName,\r\n    Gender,\r\n    BirthDate,\r\n    address,\r\n    city,\r\n    state,\r\n    postalCode,\r\n    FHIR_Document,\r\n    LastUpdated,\r\n    UpdatedBy,\r\n    rowguid,\r\n    LoadedDateTime\r\n) VALUES (\r\n    @Facility_Source,\r\n    @FirstName,\r\n    @MiddleName,\r\n    @LastName,\r\n    @Gender,\r\n    @BirthDate,\r\n    @address,\r\n    @city,\r\n    @state,\r\n    @postalCode,\r\n    @FHIR_Document,\r\n    @LastUpdated,\r\n    @UpdatedBy,\r\n    @rowguid,\r\n    @LoadedDateTime\r\n)",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "editor",
        "parseMustache": true,
        "params": [
            {
                "output": false,
                "name": "Facility_Source",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.Facility_Source",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "FirstName",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.FirstName",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "MiddleName",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.MiddleName",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "LastName",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.LastName",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "Gender",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.Gender",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "BirthDate",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.BirthDate",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "address",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.address",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "city",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.city",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "state",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.state",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "postalCode",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.postalCode",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "FHIR_Document",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.FHIR_Document",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "LastUpdated",
                "type": "DateTime",
                "valueType": "datetime",
                "value": "0",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "UpdatedBy",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.UpdatedBy",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "rowguid",
                "type": "VarChar",
                "valueType": "uuidv4",
                "value": "0",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "LoadedDateTime",
                "type": "DateTime",
                "valueType": "datetime",
                "value": "0",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            }
        ],
        "x": 360,
        "y": 220,
        "wires": [
            [
                "e155c55b.d410d8"
            ]
        ]
    },
    {
        "id": "2c1b8c17.87a134",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "3a2a3be.e1920c4",
        "name": "select top 100",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": 1,
        "query": "select top 100 * from pets",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 540,
        "y": 300,
        "wires": [
            [
                "7b7f58bf.a1fac8"
            ]
        ]
    },
    {
        "id": "312175e2.9453fa",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "select where gender",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": 1,
        "query": "select top 100 * from Repository\nwhere Gender = @Gender",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "editor",
        "parseMustache": true,
        "params": [
            {
                "output": false,
                "name": "Gender",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            }
        ],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "604f68c.9a00298"
            ]
        ]
    },
    {
        "id": "9e433c10.ab03",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "d": true,
        "mssqlCN": "3a2a3be.e1920c4",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "INSERT INTO mytable (data)\nVALUES ({{{payload}}}",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "rows": "",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 620,
        "y": 780,
        "wires": [
            [
                "9bf58dc7.eee01"
            ]
        ]
    },
    {
        "id": "6e95e7fc.fd21b8",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "create table Medical_record_Number",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "\r\nCREATE TABLE [dbo].[Medical_record_Number](\r\n\t[FHIR_MRN_ID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Medical_Record_Number] [varchar](50) NULL,\r\n\t[Found] [varchar](5) NULL,\r\n\t[FHIR_Document] [varchar](max) NULL,\r\n\t[LastUpdated] [datetime] NULL,\r\n\t[UpdatedBy] [varchar](50) NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[LoadedDateTime] [datetime] NULL,\r\nPRIMARY KEY CLUSTERED \r\n(\r\n\t[FHIR_MRN_ID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\n\r\n\r\nALTER TABLE [dbo].[Medical_record_Number] ADD  DEFAULT (getdate()) FOR [LastUpdated]\r\n\r\n\r\nALTER TABLE [dbo].[Medical_record_Number]ADD  CONSTRAINT [DF_Master_Medical_record_Number_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\n\r\n\r\nALTER TABLE [dbo].[Medical_record_Number]ADD  DEFAULT (getdate()) FOR [LoadedDateTime]\r\n\r\n\r\n",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "parseMustache": true,
        "params": [],
        "x": 350,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "db4e8f.bc55a17",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "drop table Medical Record Number",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "\r\nDROP  TABLE [dbo].[Medical_record_Number]",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 340,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "f7917688.638238",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "f4edb6ec.2c29f8",
        "name": "insert into table Medical Record Number",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": 1,
        "query": "INSERT INTO Medical_record_Number\r\n     (\r\n\t\t    Medical_Record_Number,\r\n            Found,\r\n            FHIR_Document,\r\n            LastUpdated,\r\n            UpdatedBy,\r\n            rowguid,\r\n            LoadedDateTime\r\n    ) VALUES (\r\n            @Medical_Record_Number, \r\n            @Found,\r\n            @FHIR_Document, \r\n            @LastUpdated, \r\n            @UpdatedBy, \r\n            @rowguid, \r\n            @LoadedDateTime\r\n\t)",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "editor",
        "rows": "",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [
            {
                "output": false,
                "name": "Medical_Record_Number",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.Medical_Record_Number",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "Found,",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.Found,",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": " FHIR_Document",
                "type": "VarChar",
                "valueType": "json",
                "value": "payload. FHIR_Document",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "LastUpdated",
                "type": "VarChar",
                "valueType": "datetime",
                "value": "0",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "UpdatedBy",
                "type": "VarChar",
                "valueType": "msg",
                "value": "payload.UpdatedBy",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "rowguid",
                "type": "VarChar",
                "valueType": "uuidv4",
                "value": "0",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "LoadedDateTime",
                "type": "DateTime",
                "valueType": "datetime",
                "value": "0",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            }
        ],
        "x": 360,
        "y": 1088,
        "wires": [
            [
                "cd48c6be.0eca48"
            ]
        ]
    },
    {
        "id": "a8535dae.df603",
        "type": "MSSQL",
        "z": "78f5f0c0.cb094",
        "mssqlCN": "3a2a3be.e1920c4",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "INSERT INTO mytable (data)\nVALUES ({{{payload}}}",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "rows": "",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 620,
        "y": 1200,
        "wires": [
            [
                "499719e6.eeab18"
            ]
        ]
    },
    {
        "id": "1d05049b3d7f1716",
        "type": "Azure SQL",
        "z": "78f5f0c0.cb094",
        "name": "Azure SQL",
        "x": 310,
        "y": 440,
        "wires": [
            [
                "604f68c.9a00298"
            ]
        ]
    },
    {
        "id": "674a32c9c7574aaf",
        "type": "inject",
        "z": "78f5f0c0.cb094",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "1d05049b3d7f1716"
            ]
        ]
    },
    {
        "id": "15237651.20281a",
        "type": "debug",
        "z": "85f1cd85c70de2f2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 650,
        "y": 260,
        "wires": []
    },
    {
        "id": "84df0cd4.58462",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Select",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "select * from cats;",
        "payloadType": "str",
        "x": 151.00000381469727,
        "y": 53.99999809265137,
        "wires": [
            []
        ]
    },
    {
        "id": "ca03c5dc.709628",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Insert",
        "props": [
            {
                "p": "payload",
                "v": "INSERT INTO [Dev].[dbo].[MQTTData] (Topic, Payload) VALUES ('Cardinal', 'Tom B. Erichsen' )",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "INSERT INTO [Dev].[dbo].[MQTTData] (Topic, Payload) VALUES ('Cardinal', 'Tom B. Erichsen' )",
        "payloadType": "str",
        "x": 153,
        "y": 105,
        "wires": [
            [
                "4ead60cd6f8f9329"
            ]
        ]
    },
    {
        "id": "57a3215a.12b8d",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Update",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 156,
        "wires": [
            [
                "fc1afd38.1ad0f"
            ]
        ]
    },
    {
        "id": "fc1afd38.1ad0f",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "Function",
        "func": "d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\ndtstmp = new Date().toString();\npld =       \"UPDATE [Dev].[dbo].[MQTTData] \"\npld = pld + \"Set Timestamp = '\" + dformat + \"' \"\npld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 16,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 156,
        "wires": [
            []
        ]
    },
    {
        "id": "35b4a3e.f64c05c",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Select",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 151,
        "y": 212,
        "wires": [
            [
                "1528d6ba.7db449"
            ]
        ]
    },
    {
        "id": "1528d6ba.7db449",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "Function",
        "func": "pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [Dev].[dbo].[MQTTData] \"\npld = pld + \"WHERE id = \" + msg.payload\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 291,
        "y": 212,
        "wires": [
            []
        ]
    },
    {
        "id": "38bb7577.af1c3a",
        "type": "mqtt in",
        "z": "85f1cd85c70de2f2",
        "name": "",
        "topic": "SQLTest/#",
        "qos": "0",
        "broker": "712b53e5.990dfc",
        "inputs": 0,
        "x": 142,
        "y": 262,
        "wires": [
            [
                "7eafa2f8.041ebc"
            ]
        ]
    },
    {
        "id": "7eafa2f8.041ebc",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "Function",
        "func": "d = new Date(),\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\npld =       \"INSERT INTO [Dev].[dbo].[MQTTData] \"\npld = pld + \"(Topic, Payload, Timestamp) \"\npld = pld + \"VALUES ('\" + msg.topic + \"', '\" + msg.payload + \"', '\" + dformat + \"')\"\n\nmsg.topic = ''\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 284,
        "y": 262,
        "wires": [
            [
                "15237651.20281a"
            ]
        ]
    },
    {
        "id": "4ead60cd6f8f9329",
        "type": "MSSQL",
        "z": "85f1cd85c70de2f2",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [AccountNumber]\n      ,[FirstName]\n      ,[LastName]\n      ,[PhoneNumber]\n      ,[EmergencyName]\n      ,[EmergencyNumber]\n      ,[Notes]\n  FROM [FAMILY].[dbo].[Customers]",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b09f39.2ac5d",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "9b2cfd89.80b03"
            ]
        ]
    },
    {
        "id": "9b2cfd89.80b03",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "INSERT Data",
        "func": "msg.topic = \"INSERT INTO ?? (??) VALUES (?)\";\n//.                    table. col.      value\nmsg.payload = [\"Department\",\"Department_name\",\"test\"];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 400,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "cbf82508.506aa8",
        "type": "debug",
        "z": "85f1cd85c70de2f2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 731,
        "y": 532,
        "wires": []
    },
    {
        "id": "e4a98c17.08f2d",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 128,
        "y": 452,
        "wires": [
            [
                "5addf67b.173138"
            ]
        ]
    },
    {
        "id": "5addf67b.173138",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "Update Data",
        "func": "msg.topic = \"Update Department Set Department_name = ? where Department_id=?\";\nmsg.payload=['Logistics Managers','3']\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 307,
        "y": 456,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "e4201ad4.996998",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "warehouse",
        "payloadType": "str",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "be458293.0fb91"
            ]
        ]
    },
    {
        "id": "be458293.0fb91",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "SELECT Data",
        "func": "msg.topic = \"SELECT * FROM department WHERE department_name LIKE '%\" + msg.payload + \"%'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "9c203b7a.d31738",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "INSERT Bind - via JSON",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "INSERT INTO test (id,text) VALUES (?, ?)",
        "payload": "[4, \"This is a funny world's end\"]",
        "payloadType": "str",
        "x": 149,
        "y": 517,
        "wires": [
            [
                "404656b9.7048b8"
            ]
        ]
    },
    {
        "id": "404656b9.7048b8",
        "type": "json",
        "z": "85f1cd85c70de2f2",
        "name": "",
        "x": 349,
        "y": 517,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "421f97c2.5607f8",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go \"Warehouse\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "%Warehouse%",
        "payloadType": "str",
        "x": 140,
        "y": 680,
        "wires": [
            [
                "778ca316.16ea8c"
            ]
        ]
    },
    {
        "id": "778ca316.16ea8c",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "SELECT Data",
        "func": "msg.topic = \"SELECT * FROM Department WHERE Department_Name LIKE ?\";\nmsg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 700,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "632ef9df.2db478",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go \"MAnagers\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "%Managers%",
        "payloadType": "str",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "778ca316.16ea8c"
            ]
        ]
    },
    {
        "id": "4d7282eb.906e7c",
        "type": "mysql",
        "z": "85f1cd85c70de2f2",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 580,
        "y": 460,
        "wires": [
            [
                "cbf82508.506aa8"
            ]
        ]
    },
    {
        "id": "88f58b45.552b48",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "Delete Bind",
        "func": "msg.topic = \"Delete From department where Department_id = ?\";\nmsg.payload = [ \"6\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 560,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "8be8aa44.6b7868",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "88f58b45.552b48"
            ]
        ]
    },
    {
        "id": "a2cac161.b5ebf",
        "type": "function",
        "z": "85f1cd85c70de2f2",
        "name": "INSERT Data",
        "func": "msg.topic = \"INSERT INTO test (name) VALUES (?)\";\nmsg.payload = [ \"test\"];\nreturn msg;\n\nmsg.topic = \"INSERT INTO ?? (??) VALUES (?)\";\nmsg.payload = [\"name\",\"Department_name\",\"test\"];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "cabc5ca6.c3e37",
        "type": "inject",
        "z": "85f1cd85c70de2f2",
        "name": "Go",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "a2cac161.b5ebf"
            ]
        ]
    },
    {
        "id": "41baba0ef97cf0dd",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "Create IOT Factory table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "8885ab7292724cce"
            ]
        ]
    },
    {
        "id": "42bb2c88fdc54014",
        "type": "mysql",
        "z": "79b529018d7067ea",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "ffbeb0964dbbe3fb"
            ]
        ]
    },
    {
        "id": "ffbeb0964dbbe3fb",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "Create IOT Factory table",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "8885ab7292724cce",
        "type": "function",
        "z": "79b529018d7067ea",
        "name": "CREATE Factory table",
        "func": "msg.topic = \"CREATE TABLE iot_factory ( id SERIAL PRIMARY KEY, device_id VARCHAR(50) NOT NULL,timestamp TIMESTAMP NOT NULL,temperature FLOAT,humidity FLOAT,pressure FLOAT,status VARCHAR(20));\";            \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [
                "42bb2c88fdc54014"
            ]
        ]
    },
    {
        "id": "542a678d52f2558e",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "Insert IOT Factory DATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 140,
        "wires": []
    },
    {
        "id": "ae5874cab9adfef1",
        "type": "function",
        "z": "79b529018d7067ea",
        "name": "Insert IOT data",
        "func": "msg.topic = \"INSERT INTO iot_factory (device_id, timestamp, temperature, humidity, pressure, status) VALUES ('ABC123', NOW(), 25.5, 60.3, 1013.2, 'OK');\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "87ad5f4259466011"
            ]
        ]
    },
    {
        "id": "1fbe6d97e8d9d91a",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "INSERT IOT Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "ae5874cab9adfef1"
            ]
        ]
    },
    {
        "id": "87ad5f4259466011",
        "type": "mysql",
        "z": "79b529018d7067ea",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "542a678d52f2558e"
            ]
        ]
    },
    {
        "id": "3bf7e828a32de039",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "Select IOT Factory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "458d54040a8928b6"
            ]
        ]
    },
    {
        "id": "458d54040a8928b6",
        "type": "function",
        "z": "79b529018d7067ea",
        "name": "Select IOT Factory data",
        "func": "msg.topic = \"SELECT * From iot_factory;\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 200,
        "wires": [
            [
                "4f7a74b23fe1c931"
            ]
        ]
    },
    {
        "id": "92f8218354d90abf",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "SELECT IOT Factory",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "4f7a74b23fe1c931",
        "type": "mysql",
        "z": "79b529018d7067ea",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "92f8218354d90abf"
            ]
        ]
    },
    {
        "id": "e13936b51b40ad1e",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "Select IOT Factory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "1b60761335a92df1"
            ]
        ]
    },
    {
        "id": "1b60761335a92df1",
        "type": "function",
        "z": "79b529018d7067ea",
        "name": "Select IOT Factory data",
        "func": "msg.topic = \"SELECT * From iot_factory;\"\n//msg.topic = \"select * from iot_factory;: msg.payload: array[9];\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "95858733d5c06bab"
            ]
        ]
    },
    {
        "id": "f43d9fa634186492",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "SELECT IOT Factory array",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 260,
        "wires": []
    },
    {
        "id": "95858733d5c06bab",
        "type": "mysql",
        "z": "79b529018d7067ea",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 650,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "65c9a02007fa7f65",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "Create IOT Factory table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "b37a6392c329f6e3"
            ]
        ]
    },
    {
        "id": "41eb4d69cee7e288",
        "type": "mysql",
        "z": "79b529018d7067ea",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 630,
        "y": 360,
        "wires": [
            [
                "1c88ac2e3e2e1795"
            ]
        ]
    },
    {
        "id": "1c88ac2e3e2e1795",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "Create IOT Factory table",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 360,
        "wires": []
    },
    {
        "id": "b37a6392c329f6e3",
        "type": "function",
        "z": "79b529018d7067ea",
        "name": "CREATE Factory Temp table",
        "func": "msg.topic = \"CREATE TABLE iot_factory_temp( id SERIAL PRIMARY KEY, device_id VARCHAR(50) NOT NULL,timestamp TIMESTAMP NOT NULL,temperature FLOAT,humidity FLOAT);\";            \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            [
                "41eb4d69cee7e288"
            ]
        ]
    },
    {
        "id": "3cc5ebbaff63a817",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "Insert IOT Factory DATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "c8c43e7507d2874e",
        "type": "function",
        "z": "79b529018d7067ea",
        "name": "Insert IOT Temp data",
        "func": "msg.topic = \"INSERT INTO iot_factory_temp (device_id, timestamp, temperature, humidity) VALUES ('ABC123', NOW(), 25.5, 60.3);\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 420,
        "wires": [
            [
                "a6f6edecf8968ba3"
            ]
        ]
    },
    {
        "id": "636c9470013627d0",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "INSERT IOT Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "c8c43e7507d2874e"
            ]
        ]
    },
    {
        "id": "a6f6edecf8968ba3",
        "type": "mysql",
        "z": "79b529018d7067ea",
        "mydb": "31b212a0f0dc550c",
        "name": "",
        "x": 630,
        "y": 420,
        "wires": [
            [
                "3cc5ebbaff63a817"
            ]
        ]
    },
    {
        "id": "52c9c32392ba8c52",
        "type": "inject",
        "z": "79b529018d7067ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 520,
        "wires": [
            [
                "13268ecdbcaa7361"
            ]
        ]
    },
    {
        "id": "8fc9bc688c2c596a",
        "type": "csv",
        "z": "79b529018d7067ea",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": 0,
        "strings": true,
        "x": 470,
        "y": 520,
        "wires": [
            [
                "db3703faf2b46fb9"
            ]
        ]
    },
    {
        "id": "eb59ecfafeccbc91",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "Earthquake output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "82fd33d505443790",
        "type": "comment",
        "z": "79b529018d7067ea",
        "name": "Earthquake",
        "info": "",
        "x": 90,
        "y": 480,
        "wires": []
    },
    {
        "id": "13268ecdbcaa7361",
        "type": "http request",
        "z": "79b529018d7067ea",
        "name": "Recent Quakes",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 280,
        "y": 520,
        "wires": [
            [
                "8fc9bc688c2c596a"
            ]
        ]
    },
    {
        "id": "db3703faf2b46fb9",
        "type": "json",
        "z": "79b529018d7067ea",
        "name": "json string vs object",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 540,
        "y": 640,
        "wires": [
            [
                "f6272b0504aaad71"
            ]
        ]
    },
    {
        "id": "f6272b0504aaad71",
        "type": "debug",
        "z": "79b529018d7067ea",
        "name": "json convertor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 640,
        "wires": []
    },
    {
        "id": "1523dd03.6332f3",
        "type": "buffer-parser",
        "z": "609e5eb634beaf5c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": null,
        "specificationType": null,
        "items": [
            {
                "name": "alphabet",
                "type": "string",
                "offset": 0,
                "length": 26
            },
            {
                "name": "single byte pos 4",
                "type": "int8",
                "offset": 4
            },
            {
                "name": "bcd equiv",
                "type": "bcd",
                "offset": 4,
                "length": 5
            },
            {
                "name": "Array[6] of int16le",
                "type": "int16le",
                "offset": 26,
                "length": 6
            },
            {
                "name": "Array[6] of int16be",
                "type": "int16be",
                "offset": 26,
                "length": 6
            },
            {
                "name": "32 bools",
                "type": "bool",
                "offset": 0,
                "length": 32
            },
            {
                "name": "Array[4] of 16bits",
                "type": "16bitbe",
                "offset": 0,
                "length": 4
            }
        ],
        "outputs": 1,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "a3051c67.b82ad"
            ]
        ]
    },
    {
        "id": "a3051c67.b82ad",
        "type": "debug",
        "z": "609e5eb634beaf5c",
        "name": "MCI - json parser",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "data",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "9b72f1f5.1aacc",
        "type": "inject",
        "z": "609e5eb634beaf5c",
        "name": "Fake PLC data 16bit Array",
        "props": [
            {
                "p": "payload",
                "v": "[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]",
        "payloadType": "json",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "1523dd03.6332f3"
            ]
        ]
    },
    {
        "id": "a9a2dd4c.118f9",
        "type": "comment",
        "z": "609e5eb634beaf5c",
        "name": "take a array of 16bit values, byte reverse, split out several values and transmit one message with named objects in msg.data",
        "info": "",
        "x": 440,
        "y": 60,
        "wires": []
    },
    {
        "id": "1194a28a.49d0ad",
        "type": "buffer-parser",
        "z": "609e5eb634beaf5c",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "string",
                "name": "plc1/production/alphabet",
                "offset": 0,
                "length": 26,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int8",
                "name": "plc1/production/status/count",
                "offset": 25,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bcd",
                "name": "plc1/production/status/sequence",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int16le",
                "name": "plc1/machine/status/runner/temperature",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "plc1/machine/status/runner/speed",
                "offset": 26,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "plc1/machine/status/running",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "plc1/machine/status/warning",
                "offset": 0,
                "length": 1,
                "offsetbit": 1,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "plc1/machine/status/fault",
                "offset": 0,
                "length": 1,
                "offsetbit": 2,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "",
        "msgPropertyType": "",
        "resultType": "keyvalue",
        "resultTypeType": "",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": false,
        "outputs": 1,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "858b1ecf.77b58"
            ]
        ]
    },
    {
        "id": "858b1ecf.77b58",
        "type": "debug",
        "z": "609e5eb634beaf5c",
        "name": "MCI - json parser II",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 220,
        "wires": []
    },
    {
        "id": "c22cd2e8.52649",
        "type": "inject",
        "z": "609e5eb634beaf5c",
        "name": "Fake PLC data 16bit Array",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]",
        "payloadType": "json",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "1194a28a.49d0ad"
            ]
        ]
    },
    {
        "id": "970db39d.106a6",
        "type": "comment",
        "z": "609e5eb634beaf5c",
        "name": "take a array of 16bit values, byte reverse, split out several values and transmit individual messages with topic + payload",
        "info": "",
        "x": 420,
        "y": 180,
        "wires": []
    },
    {
        "id": "d9a7d68cc506355f",
        "type": "json2mysql",
        "z": "609e5eb634beaf5c",
        "name": "",
        "server": "",
        "template": "",
        "x": 210,
        "y": 340,
        "wires": [
            []
        ]
    }
]